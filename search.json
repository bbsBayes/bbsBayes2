[{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":null,"dir":"","previous_headings":"","what":"Code Design","title":"Code Design","text":"file contains notes code design conventions aim making collaboration future modifications easier.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"naming","dir":"","previous_headings":"","what":"Naming","title":"Code Design","text":"Snake case used wherever possible Functions generally named verb_noun() .e. run_model() prepare_data() R script files named foo-bar.R whereas main function file foo_bar.R","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Code Design","text":"Descriptions parameter arguments follow: @param arg_name Type. Description e.g., @param min_year Numeric. Minimum year plot e.g., @param add_map sf spatial object. Spatial data add map output e.g., @param quantiles Numeric vector. Quantiles sampled ... Document repetitive arguments (ones found one function) R/aa_common_docs.R file (named sort top folder), use @inheritParams common_docs function documentation. way duplicate documentation stays consistent. Use @noRd document internal functions (documentation developers isn’t compiled docs) articles pre-compiled avoid super long CI building fragile issues Precompiled vignettes ext .Rmd.orig, compiled .Rmd (R code already run, actually Vignette HTML super fast) also need adjust location figs first chunk .Rmd.orig file RELEASE.R step re-pre-compiling vignettes easier editing testing, can make RStudio treat .Rmd.orig files .Rmd files clicking language button bottom right corner script pane changing txt R Markdown. vignette requires full data requires Stan installed put ‘articles’ folder (’s compiled R-Universe). compiled pkgdown website GitHub actions.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"storing-data","dir":"","previous_headings":"","what":"Storing data","title":"Code Design","text":"bbs_dir() figures folder store data creates needed. Use function wherever location required (e.g., BBS data model executables) CRAN doesn’t like rappdirs R 4.0.0 CRAN wants packages use tools::R_user_dir(), isn’t available older versions R. import backports package specify function import (see .onLoad() R/bbsBayes2-package.R use R_user_dir() directly (pkg::, see bbs_dir() R/fetch-bbs-data.R","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"checks","dir":"","previous_headings":"","what":"Checks","title":"Code Design","text":"Check functions named check_XXX() stored R/checks.R file really big (e.g., check_species() check_strata()), , used (e.g., check_sf(), check_logical()). ’s also justifiable create check functions ease reading code (e.g., list checks start run_model()). deparse(substitute(name)) way getting original argument name submitted function parent function. way check_XXX() functions can reference correct argument name error messages.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"tidyeval-and-nse-non-standard-evaluation","dir":"","previous_headings":"","what":"Tidyeval and NSE (non-standard evaluation)","title":"Code Design","text":"general, see https://ggplot2.tidyverse.org/reference/tidyeval.html, https://ggplot2.tidyverse.org/reference/tidyeval.html avoid CRAN checks, use .data[[\"col_name\"]] .data$col_name reference column names right-hand side = inside tidyverse functions. Use `.env$varto reference environmental variables. e.g.,dplyr::mutate(mtcars, cyl = .datahp * .dataam)ordplyr::mutate(mtcars, mpg = .datampg/.envratio)` dplyr::group_by(.data[[rr]]) (note lack quotes, ’re calling value rr) dplyr::mutate(\"{rr}\" := .character(.data[[rr]]) (complex see references)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"sf-related","dir":"","previous_headings":"","what":"sf related","title":"Code Design","text":"Use sf::st_agr(sf) <- \"constant\" tell sf variables spatially constant (prevents warning “attribute variables assumed spatially constant throughout geometries”).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"example-data","dir":"","previous_headings":"","what":"Example data","title":"Code Design","text":"possible, examples required data created data-raw/data_XXX.R Currently, data exported, usable user well functions. (stupid) reasons, exported data (e.g., species_forms) need referenced via bbsBayes2::data (e.g., bbsBayes2::species_forms) inside bbsBayes2 functions (See details/options: https://coolbutuseless.github.io/2018/12/10/r-packages-internal--external-data/)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"testing-and-examples","dir":"","previous_headings":"","what":"Testing and examples","title":"Code Design","text":"doubt skip_on_cran() tests (never run fragile tests might fail) Use @examplesIf interactive() skip examples can run shouldn’t tested (e.g., fetch_bbs_data()) Use @examplesIf have_bbs_data() skip examples require full download BBS data. R-Universe builds, GitHub Actions fetch data first. Use @examplesIf have_cmdstan() skip examples require Stan installed (.e. anything use run_model()). R-Universe builds, GitHub Actions install Stan first. use \\dontest examples never run (try many) use \\dontrun examples won’t fail, take run. use first_diff model output test-XX_run_model.R ensure --date model example testing test-XX_generate_indices.R, test-XX_generate_trends.R test-XX_plots.R use pacific_wren_slope_model example model tests needing check alternate n. Don’t create test-XX_run_model.R takes long. tracking lifecycle warnings tidyverse packages, can helpful set options(lifecycle_verbosity = \"error\") warnings become hard errors fail every time (able “warning” found didn’t work ).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"continuous-integration-ci","dir":"","previous_headings":"","what":"Continuous Integration (CI)","title":"Code Design","text":"Package Checks - usethis::use_github_action_check_standard() (file R-CMD-check.yaml) Code Coverage - usethis::use_coverage() (file test-coverage.yaml) Documentation website - usethis::use_pkgdown_github_pages() (file pkgdown.yaml) Note Package Checks don’t build vignettes ) download stratification.Rmd vignette fails Windows, b) already built (therefore tested) pkgdown workflow.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"random-notes","dir":"","previous_headings":"","what":"Random Notes","title":"Code Design","text":"Use “grey60” rather grDevices::grey(0.6) avoid another dependency","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"deprecating-defunct-ing-and-other-big-changes","dir":"","previous_headings":"","what":"Deprecating, Defunct-ing, and other big changes","title":"Code Design","text":"See R/bbsBayes2-defunct.R listing defunct packages document page See R/bbsBayes2-deprectated.R listing deprecated packages document page dep_stop() dep_warn() created bbsBayes2-defunct.R can used stop warn use functions arguments, depending. Add dep_warn() start function call either continue, switch new function (e.g., R/bbsBayes2-deprectated.R) Add documentation bbsBayes2-deprecated Add dep_stop() start function call remove rest code (clarity) (e.g., R/bbsBayes2-defunct.R) Add documentation bbsBayes2-defunct Move argument function() call end list, without default Move documentation argument end list mark “Deprecated. Use X instead”, just “Deprecated.” (Defunct) deprecated replacement, add (!missing(arg)) {dep_warn(...)} start function use arg_new <- arg_old inside condition defunct without replacement, add (!missing(arg)) dep_warn(...) (!missing(arg)) dep_stop(...)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_DESIGN.html","id":"useful-tips","dir":"","previous_headings":"","what":"Useful tips","title":"Code Design","text":"Use Ctrl-Shift-L load package functions via devtools::load_all() see https://r-pkgs.org/workflow101.html#sec-load-Use Ctrl-Shift / automatically text-wrap Use Ctrl Click function jump function’s definition","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team edwardsb@uoguelph.ca. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bbsBayes2","title":"Contributing to bbsBayes2","text":"Thank contributions! Following guidelines help streamline process contributing make sure ’re page. ask read guide follow best abilities, welcome contributions , regardless level experience. participating project, agree abide code conduct.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CONTRIBUTING.html","id":"types-of-contributions","dir":"","previous_headings":"","what":"Types of contributions","title":"Contributing to bbsBayes2","text":"Don’t feel must computer whiz make meaningful contributions. Feel free : Identify areas future development ([open Issue]https://github.com/bbsBayes/bbsBayes2/issues)) Identify issues/bugs (open Issue) Write tutorials/vignettes (open Pull Request contribute ones , make elsewhere send us link) Add functionality (open Pull Request) Fix bugs (open Pull Request)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CONTRIBUTING.html","id":"new-to-github","dir":"","previous_headings":"","what":"New to GitHub?","title":"Contributing to bbsBayes2","text":"Getting ready make first contribution? couple tutorials may wish check : Tutorial first-timers contribute (-depth lessons) GitHub setup GitHub pull requests.)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CONTRIBUTING.html","id":"how-to-contribute-code","dir":"","previous_headings":"","what":"How to contribute code","title":"Contributing to bbsBayes2","text":"Fork repository Clone repository GitHub computer e.g,. git clone https://github.com/bbsBayes/bbsBayes2.git git remote add upstream https://github.com/bbsBayes/bbsBayes2.git making changes make sure pull changes upstream git pull upstream changes beyond minor typos, add item NEWS.md describing changes add DESCRIPTION file contributor Push GitHub account Submit pull request home base (likely master branch, check make sure) bbsBayes/bbsBayes2","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/CONTRIBUTING.html","id":"code-formatting","dir":"","previous_headings":"","what":"Code formatting","title":"Contributing to bbsBayes2","text":"general follow convention http://r-pkgs..co.nz/r.html#style (snake_case functions argument names, etc.) conflict, default style bbsBayes2 Use explicit package imports (.e. package_name::package_function) avoid @import possible","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/PULL_REQUEST_TEMPLATE.html","id":"best-practices","dir":"","previous_headings":"","what":"Best Practices","title":"NA","text":"following updated added needed: [ ] Documentation [ ] Examples documentation","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"some-more-advanced-options","dir":"Articles","previous_headings":"","what":"Some more advanced options","title":"Advanced Example","text":"examples, using series saved model outputs. model outputs can downloaded Google Drive. example code , unzipped saved model outputs stored .rds files local sub-directory called output.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"posterior-predictive-checks","dir":"Articles","previous_headings":"Some more advanced options","what":"Posterior Predictive Checks","title":"Advanced Example","text":"Posterior predictive checks best done R, fitting model. certainly possible modify Stan code include posterior predictions individual BBS counts. However, using Stan generate predicted counts almost double size saved model object. generate posterior distributions predicted counts, need extract posterior samples parameter E bbsBayes2 models. Also, used negative binomial error distribution, also need extract posterior samples parameter phi (inverse negative binomial dispersion parameter). Stan negative binomial distribution, \\(\\phi\\) parameter size base::rnbinom(), arguments mu = exp(E), size = phi. ’s example, using fitted model object Hepatic Tanager data fit first_dif model using latlong stratification.","code":"STFL_gamye_spatial <- readRDS(\"output/4430_gamye_spatial.rds\")  # tibble with one row for each posterior draw and one column for each parameter (i.e., each count) E <- posterior::as_draws_df(STFL_gamye_spatial$model_fit) %>%   select(matches(\"^E([[:punct:]])\"),          .draw) #> Warning: Dropping 'draws_df' class as required metadata was removed. # tibble with 1 column for phi and one row for each posterior draw phi <- posterior::as_draws_df(STFL_gamye_spatial$model_fit)%>%   select(phi,          .draw) #> Warning: Dropping 'draws_df' class as required metadata was removed.  # join tibbles by draw E <- left_join(phi,E,                by = \".draw\") # custom function to generate posterior predictive counts from negative binomial pred_counts_nb <- function(e_mu,phi_i){   n <- length(phi_i)   x <- rnbinom(n,mu = exp(e_mu),size = phi_i)   return(x) }  y_rep <- E %>%   mutate(across(matches(\"^E([[:punct:]])\"),                           ~ pred_counts_nb(.x,phi))) %>%   select(matches(\"^E([[:punct:]])\")) %>%   sample_n(.,500)  y_rep <- posterior::as_draws_matrix(y_rep)  ppc_overplot <- bayesplot::ppc_ecdf_overlay(y = STFL_gamye_spatial$raw_data$count,                                     yrep = y_rep) ppc_overplot <- ppc_overplot +   coord_cartesian(xlim = range(STFL_gamye_spatial$raw_data$count))  print(ppc_overplot)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"example---replicating-the-cws-status-and-trend-estimates-2018-version-onwards","dir":"Articles","previous_headings":"Some more advanced options","what":"EXAMPLE - Replicating the CWS status and trend estimates (2018 version onwards)","title":"Advanced Example","text":"CWS analysis, 2018 BBS data-version, uses gamye model. full script run CWS analysis 2021 BBS data version accessible . Although particular analyses run bbsBayes2 released, basic workflow can replicated bbsBayes2 given species follows.","code":"species.eng = \"Pacific Wren\"  stratified_data <- stratify(by = \"bbs_cws\",species=species.eng) #same as USGS but with BCR7 as one stratum and PEI and Nova Scotia combined into one stratum  # to be included a stratum must have at least 3 routes on which the species has been observed # and at least one of those routes must have at least 2 years of observations d<- prepare_data(strata_data = stratified_data,                  min_n_routes = 3,                  min_max_route_years = 2)  m<-prepare_model(   prepared_data = d,   model=\"gamye\",   model_variant=\"hier\", # non-spatial version used in 2021   use_pois = FALSE #negative binomial error distribution )  mod_cws <- run_model( model_data = m,                   refresh=500,                       iter_sampling = 1000,                       iter_warmup = 1000,                      chains = 3,                      parallel_chains = 3)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"example---similar-analyses-to-the-usgs-status-and-trend-estimates-2021-data-version","dir":"Articles","previous_headings":"Some more advanced options","what":"EXAMPLE - Similar analyses to the USGS status and trend estimates 2021 data version","title":"Advanced Example","text":"example approximate. USGS analysis use bbsBayes2 package, analysts USGS confirmed example replicate analyses. USGS analyses 2021 uses one two different models (either slope first-difference) one two different error distributions (Poisson either heavy-tailed overdispersion normally distributed overdispersion) (see, Link et al. 2017 Link et al. 2020 details). provide data preparation model options approximate 2021 USGS bbs analyses species uses heavy-tailed Poisson error distribution first-difference model.","code":"species.eng = \"Pacific Wren\" stratified_data <- stratify(by = \"bbs_usgs\",species=species.eng) #BCR by province/state/territory intersections  d <- prepare_data(strata_data = stratified_data,                   min_n_routes = 3,                   min_max_route_years = 1) #slight difference in minimum data cut-offs  m<-prepare_model(prepared_data = d,   model=\"first_diff\",   model_variant = \"nonhier\", #no sharing of information among strata on abundance or trends   use_pois = TRUE, # overdispersed, Poisson distribution   heavy_tailed = TRUE, #heavy-tailed (t-distribution) to model extra-Poisson dispersion  calculate_nu = TRUE     # estimated the df parameter for the heavy-tailed t-distribution )  # MCMC settings for the usgs analyses are not published, nor would they be relevant here # because the official analyses use JAGS and Gibbs Sampling and not Stan's HMC algorithm # mod <- run_model(model_data = m, #                  ...)"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"alternate-error-distributions","dir":"Articles","previous_headings":"Some more advanced options","what":"Alternate error distributions","title":"Advanced Example","text":"Error distributions bbsBayes2 models can accessed using combination three arguments ?prepare_model() function.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"poisson-vs-negative-binomial","dir":"Articles","previous_headings":"Some more advanced options > Alternate error distributions","what":"Poisson vs negative binomial","title":"Advanced Example","text":"models, BBS counts given route year can modeled using either -dispersed Poisson distribution negative binomial distribution. selection controlled using use_pois argument. negative binomial default use_pois = FALSE, greatly reduces memory requirements size object created using run_model(). using negative binomial distribution, arguments need set. user wishes use -dispersed Poisson distribution model error distribution BBS counts, set prepare_model(..., use_pois = TRUE). approach generates count-level random effect account extra-Poisson variance, following approaches used official BBS analyses. count-level parameter estimates reason increase memory requirements object size fitting model (.e., require monitoring additional parameter every observation dataset). using Poisson option, two additional arguments user can select control specifics -dispersion. first argument allows user select normal distribution (heavy_tailed = FALSE) model count-level random effects default heavier-tailed t-distribution (heavy_tailed = TRUE). Finally, heavy-tailed t-distribution selected, user can choose either estimate degrees freedom t-distribution calculate_nu = TRUE letting model estimate heaviness tails, t-distribution fixed 3 calculate_nu = FALSE implying heavy-tails relative normal. used calculate_nu = FALSE default many species estimating degrees freedom greatly increases model run-times.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"alternate-measures-of-trend-and-population-change","dir":"Articles","previous_headings":"Some more advanced options","what":"Alternate Measures of Trend and Population Change","title":"Advanced Example","text":"generate_trends() function produces much just trend estimates. section explains one alternate measure trend (.e., slope trends) measures population change, percent change population first last years trend probability population decreased certain amount.","code":"# set of indices for demonstrating trend options m <- readRDS(\"output/4430_first_diff_spatial.rds\") # Scissor-tailed Flycatcher i <- generate_indices(m) #> Processing region continent #> Processing region stratum"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"the-default-trend-estimate","dir":"Articles","previous_headings":"Some more advanced options > Alternate Measures of Trend and Population Change","what":"The default trend estimate","title":"Advanced Example","text":"default trend calculation interval-specific estimate geometric mean annual change population. \\(Trend = (\\frac {n[min-year]}{n[max-year]})^{(1/(max-year-min-year))}\\) refer end-point trends. rely comparison annual indices first last years trend period quantify mean rate population change. However, ignores pattern change two end-points.","code":"t <- generate_trends(i,                      slope = TRUE,                      min_year = 1980) #trends from 1980-2021 t_map <- plot_map(t) print(t_map)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"slope-based-trends","dir":"Articles","previous_headings":"Some more advanced options > Alternate Measures of Trend and Population Change","what":"Slope-based Trends","title":"Advanced Example","text":"bbsBayes2 includes alternate trend estimate can applied models dampen influence start end years trend. slope-based trends calculated fitting log-linear slope series annual indices two end-points (e.g., 11 years 10-year trend 2011-2021). refer trends slope-based trends. slope line transformed average annual percent change across time-period interest. Fslope-based trend may useful estimates derived model species strong annual fluctuations user wishes account overall pattern annual fluctuations trend estimate without letting trend completely determined annual fluctuations particular end-point years. slope trends can added trend output table setting slope = TRUE argument generate_trends(). default end-point trends still calculated, additional columns added include alternate estimates. NOTE: plot_map() function can map slope trends well slope = TRUE argument.","code":"t_map_slope <- plot_map(t,                         slope = TRUE) print(t_map_slope)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"percent-change-and-probability-of-change","dir":"Articles","previous_headings":"Some more advanced options > Alternate Measures of Trend and Population Change","what":"Percent Change and probability of change","title":"Advanced Example","text":"generate_trends() function produces estimates overall percent-change population first last years trend-period, default. calculation may easier interpret average annual rate change. percent change estimates associated uncertainty bounds, can helpful deriving statements “2008 2018, population declined 20 percent, estimate relatively uncertain true decline may little 2 percent much 50 percent” addition, function can optionally calculate posterior conditional probability population changed less user-defined threshold(s), using prob_decrease prob_increase arguments. calculate conditional probability species population decreased, set argument prob_decrease = 0. Similarly want know conditaional probability population decreased 50% use prob_decrease = 50. values can useful deriving statements “first-difference spatial model suggests extremely likely Scissor-tailed Flycatcher population monitored BBS decreased 1966 2021 (prob_decrease_0_percent > 0.999), approximate 21% probability species decreased least 50% time period (prob_decrease_50-percent = 0.20775)”.","code":"t <- generate_trends(i)  t$trends[1,c(\"region\",\"percent_change\",\"percent_change_q_0.95\")] #> # A tibble: 1 × 3 #>   region    percent_change percent_change_q_0.95 #>   <chr>              <dbl>                 <dbl> #> 1 continent          -46.8                 -39.8 t <- generate_trends(i,                      prob_decrease = c(0,50)) # two thresholds  t$trends[1,c(\"region\",\"prob_decrease_0_percent\",\"prob_decrease_50_percent\")] #> # A tibble: 1 × 3 #>   region    prob_decrease_0_percent prob_decrease_50_percent #>   <chr>                       <dbl>                    <dbl> #> 1 continent                       1                    0.208"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"custom-regional-summaries","dir":"Articles","previous_headings":"Some more advanced options","what":"Custom regional summaries","title":"Advanced Example","text":"Yes, can calculate trend trajectories custom combinations strata, trends largely arbitrary groupings Bird Conservation Regions based approximately northern southern portions Barn Swallow’s range. First load fitted model object Barn Swallow. extract strata list fitted model object define new column north_south identifies strata belong new composite regions (North South)","code":"BARS <- readRDS(\"output/Barn_Swallow_first_diff_spatial.rds\") comp_regions <- BARS$meta_strata %>%   mutate(north_south = ifelse(bcr < 15, \"North\",\"South\"))  i_BARS <- generate_indices(BARS,                            regions_index = comp_regions, # new data frame to identify which strata are in composite regions                            regions = \"north_south\") # column in data frame with composite region names #> Processing region north_south  trajectories <- plot_indices(i_BARS) print(trajectories[[\"North\"]] / trajectories[[\"South\"]])"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"exporting-and-modifying-the-stan-models","dir":"Articles","previous_headings":"Some more advanced options","what":"Exporting and modifying the Stan models","title":"Advanced Example","text":"can easily export bbsBayes2 models text file. , can modify model text (e.g., try different prior) run modified model. modify model, can open saved .stan file (RStudio good support Stan model syntax), make modifications model, re-save file. familiar writing Stan code, want careful modifying bbsBayes2 models; model files relatively long include complicated components (conditional statements, transformed parameters transformed data). However, excellent online sources getting comfortable working Stan, package exists large part allow users explore, modify, elaborate, understand models. brave, careful, open, contact package authors get stuck. promise friendly best help. modifying .stan file, can use bbsBayes2 fit data modified model using model_file argment prepare_model().","code":"copy_model_file(model=\"gamye\",                 model_variant = \"hier\",                 dir = getwd()) #writes the stan file to working directory prep<- prepare_model(...,         model_file=\"gamye_hier_bbs_CV_COPY.stan\",          ...           )  mod<-run_model(prep,...)"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"calculating-the-approximate-loo-cv","dir":"Articles","previous_headings":"Some more advanced options > Comparing Models","what":"Calculating the approximate loo-cv","title":"Advanced Example","text":"models include option calculate point-wise log-likelihood count given model parameter estimates. used, option allows use cmdstanr::loo() function calculate approximate leave-one-cross-validation statistics. caveats warnings: Using approximate loo-cv assess models /compare alternate models requires strong assumptions user aware . Importantly, leave one cross-validation assumes individual observations conditionally independent. Given rich nested dependencies BBS data (non-independence observations within observers, routes, strata, years), assumption may questionable. Observation-level random effects (.e., use_pois = TRUE) often extremely flexible result poor diagnostics approximate loo calculations. Adding observation-level log_likelihood calculation greatly increases memory requirements size saved model objects.","code":"md <- stratify(by = \"bbs_usgs\", species = \"Hepatic Tanager\", quiet = TRUE) %>%   prepare_data(min_year= 2009, max_year = 2019) %>%   prepare_model(\"first_diff\", calculate_log_lik = TRUE) %>%   run_model(., iter_warmup = 200, iter_sampling = 100)  # install.packages(\"loo\") loo_md <- md$model_fit$loo() # loo calculations using the functions built into the cmdstanr model-fit object"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/advanced.html","id":"cross-fold-validation","dir":"Articles","previous_headings":"Some more advanced options > Comparing Models","what":"Cross-fold Validation","title":"Advanced Example","text":"Bayesian model assessment open area research. included experimental features allow one approach cross-validation. features experimental users cautious confident understand ’re . cross fold validation, prepare_model() function can used define observations part test set part training set. use method implemented bbsBayes2, ’ll specify calculate_cv TRUE prepare_model() step. default, prepare 10 test sets (K-folds, cv_k) using obs_n grouping variable (cv_fold_groups) omitting groups single observations (cv_omit_singles). details examples coming. Now model data (md) list item called folds contains fold groups assigned observation. use , ’ll need loop model specify k iteration.","code":"#a model of counts from 2009-2019 md <- stratify(by = \"bbs_usgs\", species = \"Hepatic Tanager\", quiet = TRUE) %>%   prepare_data(min_year= 2009, max_year = 2019) %>%   prepare_model(\"first_diff\", calculate_cv = TRUE, cv_k = 3) #a quick model with too few iterations, not saving the example model for(k in 1:3) {   run_model(md, k = k, chains = 2, iter_warmup = 500, iter_sampling = 100,             save_model=FALSE) }"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"welcome","dir":"Articles","previous_headings":"","what":"Welcome!","title":"Get Started","text":"bbsBayes2 successor bbsBayes, major shift functionality. MCMC backend now Stan instead JAGS, workflow streamlined, syntax changed, new functions. vignette help get started package, three others help explain new features, choices, advanced uses: Stratification vignette stratification vignette explains built-options spatial stratifications well workflow required apply custom stratification. Models vignette models vignette explains four built-models differ way temporal components structured, also covers built-options error distributions differences among model variants (e.g., model_variant = \"spatial\"). Advanced vignette advanced vignette helpful users wanting take bbsBayes2 functionality , including alternate calculations population trend, customizing Stan models, adding covariates, even experimental functions allow k-fold cross-validations approximate leave-one-calculations compare fit predictive accuracy among models. First ’ll make sure right software installed, ’ll fetch BBS survey data, ’ll run example workflows.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"install-cmdstanr","dir":"Articles","previous_headings":"Welcome!","what":"Install cmdstanr","title":"Get Started","text":"bbsBayes2 uses Stan run Bayesian models, need make sure cmdstanr cmdstan installed. Run fresh R session. Now able use cmdstanr install cmdstan Let’s check everything went planned Problems? Check cmdstanr’s vignette Getting Started","code":"install.packages(\"cmdstanr\", repos = c(\"https://mc-stan.org/r-packages/\",                                        getOption(\"repos\"))) cmdstanr::install_cmdstan() cmdstanr::check_cmdstan_toolchain() #> The C++ toolchain required for CmdStan is setup properly!"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"special-note-for-windows-users","dir":"Articles","previous_headings":"Welcome! > Install cmdstanr","what":"Special note for Windows users","title":"Get Started","text":"strongly recommend install Linux Windows machine take advantage cmdstanr functions run Stan models Linux. likely cut MCMC run-times 30-50% bbsBayes2 models. Installing Windows Subsystem Linux (WSL) small hassle, needs done . Follow directions link. WSL installation complete, re-install cmdstan using cmdstanr::install_cmdstan(overwrite = TRUE, wsl = TRUE). Now, everytime run model using cmdstan (therefore anytime run model using bbsBayes2), use Linux installation run Stan. ’s seamless ’ll thankful ’s done.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"workflow-overview","dir":"Articles","previous_headings":"Welcome!","what":"Workflow overview","title":"Get Started","text":"can visualize bbsBayes2 workflow flow chart functions. functions colour coded category: BBS Data - Blue Data Prep - Pink Modelling - Green Exploring model trends indices - Purple General helper functions - Orange Functions connected solid, black arrow, indicate output first function required input second. example, output stratify() required input prepare_data(). Functions connected solid, grey arrow, indicate output first function optional input second. example, output grenerate_trends() option input plot_geofacet(). Functions connected dotted arrow indicate first function can used create input second, necessarily directly. example, fetch_bbs_data() downloads BBS data used stratify(), isn’t input. Alternatively, load_map() can load spatial data file specific stratification can modified user used input prepare_spatial() generate_indices(). See Function Reference details use particular function.","code":"#> Warning: package 'DiagrammeR' was built under R version 4.3.1"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"download-bbs-data","dir":"Articles","previous_headings":"Welcome!","what":"Download BBS data","title":"Get Started","text":"Now ’ll fetch BBS data using fetch_bbs_data() function. save data package-specific directory computer. must agree terms conditions data usage download run (type yes prompt). message also includes key metadata dataset, including citation, acknowledgements, release-version (). need run function annual update BBS database (updates usually occur summer, approximately 1-year following data collection). Note bbsBayes2 functionality can explored without downloading BBS data using included sample data. Specify sample_data = TRUE first stratify() step (see next section). (June 2023) two types BBS data can downloaded, two release-versions: Two levels state stop (state works bbsBayes2 models, stop option provided facilitate custom projects models) Two releases 2020 2022 (options added annual releases occur) defaults (level state recent release) almost certainly looking , Unless specific reason need different version. recent release include data included earlier releases. However can download data sets specify one wish use stratify() step.","code":"library(bbsBayes2) fetch_bbs_data() #"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"a-note-about-bbs-release-names","dir":"Articles","previous_headings":"Welcome! > Download BBS data","what":"A note about BBS release names:","title":"Get Started","text":"releases named year annual dataset released going QA-QC. 2022 release contains surveys conducted including 2021 field season. release = 2021, BBS cancelled COVID lockdowns spring 2020 data collected updated data release following year.","code":"fetch_bbs_data()                  # Default fetch_bbs_data(release = \"2020\")  # Specify a different release"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"workflow-to-fit-models","dir":"Articles","previous_headings":"Welcome!","what":"Workflow to fit models","title":"Get Started","text":"Note: prefer skip model-fitting process now, skip Workflow explore model outputs. Now cmdstanr installed BBS data downloaded, ’ll walk general workflow modelling species trends bbsBayes2.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"stratify-the-data","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"Stratify the data","title":"Get Started","text":"first step bbsBayes2 analysis stratify data. step choose stratification type well species explore. can also play around included sample data (Pacific Wrens) Stratifications included bbsBayes2 bbs_usgs, bbs_cws, bcr, latlong, prov_state. See article stratifications details examples.","code":"s <- stratify(by = \"bbs_usgs\", species = \"Scissor-tailed Flycatcher\") #> Using 'bbs_usgs' (standard) stratification #> Loading BBS data... #> Filtering to species Scissor-tailed Flycatcher (4430) #> Stratifying data... #>   Renaming routes... s <- stratify(by = \"bbs_cws\", sample_data = TRUE) # Only Pacific Wren #> Using 'bbs_cws' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes..."},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"species-names-in-bbsbayes2","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"Species names in bbsBayes2","title":"Get Started","text":"brief step workflow explain important information species names bbsBayes2 models package species-specific. species fundamental aspect analysis. search_species() function allows user search species names BBS database, using text English, Spanish, French, Latin names. English names species retained metadata every step workflow.","code":"search_species(\"Geai bleu\") #> # A tibble: 1 × 9 #>     aou english  french    spanish             order         family   genus      species  unid_combined #>   <dbl> <chr>    <chr>     <chr>               <chr>         <chr>    <chr>      <chr>    <lgl>         #> 1  4770 Blue Jay Geai bleu Cyanocitta cristata Passeriformes Corvidae Cyanocitta cristata TRUE search_species(\"Cyanocitta\") #> # A tibble: 2 × 9 #>     aou english       french          spanish             order         family   genus      species unid_combined #>   <dbl> <chr>         <chr>           <chr>               <chr>         <chr>    <chr>      <chr>   <lgl>         #> 1  4780 Steller's Jay Geai de Steller Cyanocitta stelleri Passeriformes Corvidae Cyanocitta stelle… TRUE          #> 2  4770 Blue Jay      Geai bleu       Cyanocitta cristata Passeriformes Corvidae Cyanocitta crista… TRUE search_species(\"Corvidae\") #> # A tibble: 22 × 9 #>      aou english                                          french spanish order family genus species unid_combined #>    <dbl> <chr>                                            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  4840 Canada Jay                                       Mésan… Periso… Pass… Corvi… Peri… canade… TRUE          #>  2  4830 Green Jay                                        Geai … Cyanoc… Pass… Corvi… Cyan… yncas   TRUE          #>  3  4920 Pinyon Jay                                       Geai … Gymnor… Pass… Corvi… Gymn… cyanoc… TRUE          #>  4  4780 Steller's Jay                                    Geai … Cyanoc… Pass… Corvi… Cyan… stelle… TRUE          #>  5  4770 Blue Jay                                         Geai … Cyanoc… Pass… Corvi… Cyan… crista… TRUE          #>  6  4790 Florida Scrub-Jay                                Geai … Aphelo… Pass… Corvi… Aphe… coerul… TRUE          #>  7  4811 Island Scrub-Jay                                 Geai … Aphelo… Pass… Corvi… Aphe… insula… TRUE          #>  8  4812 California Scrub-Jay                             Geai … Aphelo… Pass… Corvi… Aphe… califo… TRUE          #>  9  4813 Woodhouse's Scrub-Jay                            Geai … Aphelo… Pass… Corvi… Aphe… woodho… TRUE          #> 10  4810 unid. California Scrub-Jay / Woodhouse's Scrub-… unid … Aphelo… Pass… Corvi… Aphe… califo… TRUE          #> # ℹ 12 more rows"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"species-groupings","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models > Species names in bbsBayes2","what":"Species groupings","title":"Get Started","text":"taxonomic groupings species-units BBS database bbsBayes2 default also combines combined species forms. represent groupings make sense based changes taxonomy potentially inconsistent distinctions among observers, routes, regions, time. groupings represent species considered distinct early portion BBS history lumped single species point since . example, Northern Flicker observations exist BBS database separately Red-shafted Flicker (4130), Yellow-shafted Flicker (4120), unidentified Red/Yellow-shafted Flicker (4123) hybrid Red x Yellow-shafted Flicker (4125). provide appropriate dataset represent population trends Northern Flicker, bbsBayes2 default sums observations new species called Northern Flicker (forms), replaces (4123) unidentified category species database. remaining original separate forms (Red, Yellow, hybrid) retained. Similar combined species created taxonomic splits occurred since start BBS, Clark’s Western Grebe, retained separate species, also combined Western Grebe (Clark’s/Western) (12). can access complete list combined species groups sub groups make . ’re looking complete list species BBS database. Note: ’re exploring package functionality, recommend using species relatively small ranges (.e., relatively data) Hepatic Tanager, Pacific Wren, Scissor-tailed Flycatcher.","code":"species_forms #>    aou_unid                               english_original #> 1      2973              unid. Dusky Grouse / Sooty Grouse #> 2      5677                   (unid. race) Dark-eyed Junco #> 3      4123    (unid. Red/Yellow Shafted) Northern Flicker #> 4      5077      unid. Bullock's Oriole / Baltimore Oriole #> 5      3370                                Red-tailed Hawk #> 6      4022                                unid. sapsucker #> 7      1690                                     Snow Goose #> 8      6295       unid. Cassin's Vireo / Blue-headed Vireo #> 9      4665     unid. Alder Flycatcher / Willow Flycatcher #> 10     4642   unid. Cordilleran / Pacific-slope Flycatcher #> 11       12            unid. Western Grebe / Clark's Grebe #> 12     6556 (unid. Myrtle/Audubon's) Yellow-rumped Warbler #> 13     5275           unid. Common Redpoll / Hoary Redpoll #>                                                   english_combined #> 1                                        Blue Grouse (Dusky/Sooty) #> 2                                      Dark-eyed Junco (all forms) #> 3                                     Northern Flicker (all forms) #> 4                            Northern Oriole (Bullock's/Baltimore) #> 5                                      Red-tailed Hawk (all forms) #> 6  Sapsuckers (Yellow-bellied/Red-naped/Red-breasted/Williamson's) #> 7                                           Snow Goose (all forms) #> 8                            Solitary Vireo (Blue-headed/Cassin's) #> 9                               Traill's Flycatcher (Alder/Willow) #> 10                  Western Flycatcher (Cordilleran/Pacific-slope) #> 11                                 Western Grebe (Clark's/Western) #> 12                               Yellow-rumped Warbler (all forms) #> 13                                          Redpoll (Common/Hoary) #>                                                french_combined                       aou_id #> 1                            Tétras sombre (sombre/fuligineux)                   2970, 2971 #> 2                            Junco ardoisé (toutes les formes) 5671, 5670, 5680, 5660, 5690 #> 3                           Pic flamboyant (toutes les formes)             4125, 4120, 4130 #> 4                     Oriole du Nord (de Bullock/de Baltimore)             5080, 5070, 5078 #> 5                      Buse à queue rousse (toutes les formes)                         3380 #> 6  Pics buveur de sève (maculé/à nuque rouge/à poitrine rouge)       4020, 4021, 4031, 4032 #> 7                           Oie des neiges (toutes les formes)                         1691 #> 8                  Viréo à tête bleue (à tête bleue/de Cassin)             6292, 6291, 6290 #> 9               Moucherolle de Traill (des aulnes/ des saules)                   4661, 4660 #> 10                     Moucherolle côtier (des ravins/ côtier)                   4641, 4640 #> 11                      Grèbe élégant (à face blanche/élégant)                       10, 11 #> 12               Paruline à croupion jaune (toutes les formes)                   6550, 6560 #> 13                                 Sizerin (Flammé/Blanchâtre)                   5270, 5280 all_species_bbs_database <- load_bbs_data()$species"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"prepare-the-data","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"Prepare the data","title":"Get Started","text":"stratified data, can now prepare use model. step data filtered omit routes samples, etc. See prepare_data() details can customize step.","code":"p <- prepare_data(s)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"prepare-the-model","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"Prepare the model","title":"Get Started","text":"Next prepare model parameters initialization values. See prepare_model() details can customize step.","code":"md <- prepare_model(p, model = \"first_diff\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"run-model","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"Run model","title":"Get Started","text":"Now can run model. default iter_sampling iter_warmup 1000 default chains 4. interest speed example, using much lower values, note almost certainly result problems model.","code":"m <- run_model(md, iter_sampling = 100, iter_warmup = 500, chains = 2)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"a-note-on-spatial-models","dir":"Articles","previous_headings":"Welcome! > Workflow to fit models","what":"A note on spatial models","title":"Get Started","text":"spatial models ’s two additional steps. stratify prepare data previous example, also prepare map spatial data. example . remaining steps setting model_variant = \"spatial\" prepare_model(). spatial aspects spatial model variants use intrinsic Conditional Autoregressive structure (iCAR) share information among neighbouring strata population abundance trend parameter Besag et al. 1991, ver Hoef et al. 2018, Morris et al. 2019. information bbsBayes2 models spatial models see models vignette Smith et al., 2023 pre-print. prepared spatial data object includes map spatial neighbourhood relationships given species stratification.","code":"s <- stratify(by = \"bbs_usgs\", species=\"Scissor-tailed Flycatcher\") #> Using 'bbs_usgs' (standard) stratification #> Loading BBS data... #> Filtering to species Scissor-tailed Flycatcher (4430) #> Stratifying data... #>   Renaming routes... p <- prepare_data(s)  #now the additional steps #load a map map<-load_map(stratify_by = \"bbs_usgs\") #prepare the spatial data sp<-prepare_spatial(p,map) #> Preparing spatial data... #> Identifying neighbours (non-Voronoi method)... #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) #> Formating neighbourhood matrices... #> Plotting neighbourhood matrices... #then prepare the model with the spatial output mod <- prepare_model(sp, model = \"gamye\",model_variant = \"spatial\")  #then run the model as before m <- run_model(mod)  #optionally, save the model output as an .rds file saveRDS(m,\"output/4430_gamye_spatial.rds\") print(sp$spatial_data$map)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"explore_output","dir":"Articles","previous_headings":"Welcome!","what":"Workflow to explore the model outputs","title":"Get Started","text":"prefer skip model fitting steps now, can download fitted model object (output run_model() function) test remaining package features. outputs collection functions required fit model cumulative: one retains metadata previous step. result, saved object run_model() function large list includes cmdstanr posterior samples object model fitting process, well data metadata necessary understand replicate choices made fit model.","code":"m<-readRDS(\"output/4430_gamye_spatial.rds\") names(m) #> [1] \"model_fit\"   \"model_data\"  \"meta_data\"   \"meta_strata\" \"raw_data\""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"convergence-and-parameter-summaries","dir":"Articles","previous_headings":"Welcome! > Workflow to explore the model outputs","what":"Convergence and parameter summaries","title":"Get Started","text":"First, investigate model convergence parameter estimates model. two key helper functions bbsBayes2 provide information model convergence: get_convergence() calculates convergence diagnostics get_summary() calculates convergence diagnostics well summary statistics (mean, median, credible intervals) parameters fitted model. ’ve sorted convergence diagnostics rhat values (highest values top highlight problems). Cut-offs rhat statistics somewhat arbitrary recommendations vary literature, values rhat > 1.1 indicate serious problem convergence parameters model (.e., variation among independent chains within ) values ess_bulk < approximately 400 suggest imprecise estimate parameter. cases, refitting model iterations (warmup sampling) may improve convergence. advice exploring Bayesian model convergence can found . bbsBayes2 relies functions packages cmdstanr posterior calculate rhat values following Vehtari et al. 2021. possible thin MCMC chains passing arguments cmdstanr::sample() run_model() function. call result number posterior samples run_model() defaults, may improve efficiency sampling (course also increase time required fit model factor approximately 4). want summary statistics parameters, well convergence diagnostics, function get_summary() may useful.","code":"# Convergence diagnostics for all parameters converge <- get_convergence(m) # Convergence diagnostics for all smoothed annual indices converge_n_smooth <- get_convergence(m,variables = \"n_smooth\") %>%   arrange(-rhat) converge_n_smooth #> # A tibble: 1,375 × 5 #>    variable_type variable         rhat ess_bulk ess_tail #>    <chr>         <chr>           <dbl>    <dbl>    <dbl> #>  1 n_smooth      n_smooth[7,26]   1.00    5383.    3686. #>  2 n_smooth      n_smooth[7,25]   1.00    5384.    3618. #>  3 n_smooth      n_smooth[7,28]   1.00    5325.    3745. #>  4 n_smooth      n_smooth[7,24]   1.00    5137.    3545. #>  5 n_smooth      n_smooth[7,23]   1.00    5053.    3197. #>  6 n_smooth      n_smooth[9,35]   1.00    4546.    3433. #>  7 n_smooth      n_smooth[7,27]   1.00    5348.    3780. #>  8 n_smooth      n_smooth[12,54]  1.00    4279.    3348. #>  9 n_smooth      n_smooth[14,10]  1.00    4870.    3670. #> 10 n_smooth      n_smooth[12,53]  1.00    4317.    3549. #> # ℹ 1,365 more rows m <- run_model(mod,                iter_warmup = 2000,                iter_sampling = 2000) m <- run_model(mod,                iter_warmup = 4000,                iter_sampling = 4000,                thin = 4) # Summary statistics and convergence diagnostics for all parameters summary_stats <- get_summary(m) # Summary statistics and convergence diagnostics for all smoothed annual indices summary_stats_n_smooth <- get_summary(m,variables = \"n_smooth\") %>%   arrange(-rhat) summary_stats_n_smooth #> # A tibble: 1,375 × 10 #>    variable           mean  median     sd    mad      q5    q95  rhat ess_bulk ess_tail #>    <chr>             <num>   <num>  <num>  <num>   <num>  <num> <num>    <num>    <num> #>  1 n_smooth[7,26]   0.501   0.494  0.0909 0.0894  0.367   0.661  1.00    5383.    3686. #>  2 n_smooth[7,25]   0.512   0.504  0.0933 0.0917  0.374   0.675  1.00    5384.    3618. #>  3 n_smooth[7,28]   0.488   0.480  0.0869 0.0849  0.359   0.644  1.00    5325.    3745. #>  4 n_smooth[7,24]   0.528   0.520  0.0965 0.0947  0.385   0.694  1.00    5137.    3545. #>  5 n_smooth[7,23]   0.548   0.541  0.101  0.0992  0.400   0.718  1.00    5053.    3197. #>  6 n_smooth[9,35]   0.251   0.245  0.0470 0.0444  0.183   0.335  1.00    4546.    3433. #>  7 n_smooth[7,27]   0.494   0.487  0.0888 0.0866  0.361   0.649  1.00    5348.    3780. #>  8 n_smooth[12,54]  0.103   0.0963 0.0400 0.0338  0.0539  0.174  1.00    4279.    3348. #>  9 n_smooth[14,10] 25.0    25.0    1.69   1.71   22.4    27.9    1.00    4870.    3670. #> 10 n_smooth[12,53]  0.0984  0.0926 0.0354 0.0297  0.0545  0.163  1.00    4317.    3549. #> # ℹ 1,365 more rows"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"indices---predictions-of-annual-relative-abundance","dir":"Articles","previous_headings":"Welcome! > Workflow to explore the model outputs > Model predictions","what":"Indices - predictions of annual relative abundance","title":"Get Started","text":"Indices (annual indices relative abundance) represent mean predicted annual counts species given region, average route, average observer. pattern time-series annual indices given region represent estimated population trajectory. generate indices according different categories regional summaries. bbsBayes2 models stratified based geographic spatial units, categories regions either strata (generate_indices(region = \"stratum\")), combination strata. default selected regions model summaries continent stratum. continent estimates represent area- abundance-weighted means across strata, regional summaries built stratifications allow (e.g., region = \"country\" stratifications bbs_usgs, bbs_cws, prov_state). can explore extract indices saving external file (e.g., export .csv), accessing indices item list. can also generate time-series plots indices. Note get one plot region regional category, case means one plot continent, one stratum. can plot individually pulling plot list  plots ggplot2 object can modified like . example, can modify titles axes.","code":"i <- generate_indices(model_output = m) #> Processing region continent #> Processing region stratum i[[\"indices\"]] #> # A tibble: 1,430 × 17 #>     year region    region_type strata_included      strata_excluded index index_q_0.025 index_q_0.05 index_q_0.25 #>    <dbl> <chr>     <chr>       <chr>                <chr>           <dbl>         <dbl>        <dbl>        <dbl> #>  1  1967 continent continent   US-AR-24 ; US-AR-25… \"\"              12.7          11.4         11.6         12.2  #>  2  1968 continent continent   US-AR-24 ; US-AR-25… \"\"              12.8          11.7         11.9         12.4  #>  3  1969 continent continent   US-AR-24 ; US-AR-25… \"\"              13.0          12.0         12.2         12.6  #>  4  1970 continent continent   US-AR-24 ; US-AR-25… \"\"              13.1          12.1         12.3         12.7  #>  5  1971 continent continent   US-AR-24 ; US-AR-25… \"\"              12.9          12.1         12.3         12.6  #>  6  1972 continent continent   US-AR-24 ; US-AR-25… \"\"              12.8          12.0         12.1         12.5  #>  7  1973 continent continent   US-AR-24 ; US-AR-25… \"\"              11.6          10.9         11.0         11.4  #>  8  1974 continent continent   US-AR-24 ; US-AR-25… \"\"              10.9          10.3         10.4         10.7  #>  9  1975 continent continent   US-AR-24 ; US-AR-25… \"\"              10.3           9.62         9.72        10.0  #> 10  1976 continent continent   US-AR-24 ; US-AR-25… \"\"               9.37          8.78         8.87         9.17 #> # ℹ 1,420 more rows #> # ℹ 8 more variables: index_q_0.75 <dbl>, index_q_0.95 <dbl>, index_q_0.975 <dbl>, obs_mean <dbl>, #> #   n_routes <int>, n_routes_total <int>, n_non_zero <int>, backcast_flag <dbl> # generates a list of ggplot graphs, one for each region p <- plot_indices(indices = i,                   add_observed_means = TRUE) # optional argument to show raw observed mean counts names(p) #>  [1] \"continent\" \"US_AR_24\"  \"US_AR_25\"  \"US_AR_26\"  \"US_KS_18\"  \"US_KS_19\"  \"US_KS_22\"  \"US_LA_25\"  \"US_LA_37\"  #> [10] \"US_MO_22\"  \"US_MO_24\"  \"US_NM_18\"  \"US_NM_35\"  \"US_OK_18\"  \"US_OK_19\"  \"US_OK_21\"  \"US_OK_22\"  \"US_OK_25\"  #> [19] \"US_TX_18\"  \"US_TX_19\"  \"US_TX_20\"  \"US_TX_21\"  \"US_TX_25\"  \"US_TX_35\"  \"US_TX_36\"  \"US_TX_37\" print(p[[\"continent\"]]) p1_mod <- p[[\"continent\"]]+   coord_cartesian(xlim = c(2000,NA))+ #subset of years   labs(title = \"\") # remove the title print(p1_mod)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"trends---predictions-of-mean-rates-of-change-over-time","dir":"Articles","previous_headings":"Welcome! > Workflow to explore the model outputs > Model predictions","what":"Trends - predictions of mean rates of change over time","title":"Get Started","text":"Next can calculate long-term trends based indices. Note trends bbsBayes2 models derived summaries indices time two points time. can generate trends different periods time, using combination starting year min_year ending year max_year. can plot trend estimates map visualise spatial patterns population change.  maps also ggplot2 objects can modified like . example, can zoom section map.","code":"t <- generate_trends(i) t #> $trends #> # A tibble: 26 × 27 #>    start_year end_year region    region_type strata_included   strata_excluded   trend trend_q_0.025 trend_q_0.05 #>         <dbl>    <dbl> <chr>     <chr>       <chr>             <chr>             <dbl>         <dbl>        <dbl> #>  1       1967     2021 continent continent   US-AR-24 ; US-AR… \"\"              -1.09          -1.34        -1.30  #>  2       1967     2021 US-AR-24  stratum     US-AR-24          \"\"               4.58           3.09         3.35  #>  3       1967     2021 US-AR-25  stratum     US-AR-25          \"\"               0.0864        -0.664       -0.536 #>  4       1967     2021 US-AR-26  stratum     US-AR-26          \"\"               4.88           2.54         2.94  #>  5       1967     2021 US-KS-18  stratum     US-KS-18          \"\"               2.64          -1.87        -1.23  #>  6       1967     2021 US-KS-19  stratum     US-KS-19          \"\"              -0.528         -1.32        -1.19  #>  7       1967     2021 US-KS-22  stratum     US-KS-22          \"\"              -0.199         -0.936       -0.806 #>  8       1967     2021 US-LA-25  stratum     US-LA-25          \"\"              -1.70          -3.45        -3.16  #>  9       1967     2021 US-LA-37  stratum     US-LA-37          \"\"               0.357         -2.01        -1.58  #> 10       1967     2021 US-MO-22  stratum     US-MO-22          \"\"              -0.327         -2.64        -2.19  #> # ℹ 16 more rows #> # ℹ 18 more variables: trend_q_0.25 <dbl>, trend_q_0.75 <dbl>, trend_q_0.95 <dbl>, trend_q_0.975 <dbl>, #> #   percent_change <dbl>, percent_change_q_0.025 <dbl>, percent_change_q_0.05 <dbl>, #> #   percent_change_q_0.25 <dbl>, percent_change_q_0.75 <dbl>, percent_change_q_0.95 <dbl>, #> #   percent_change_q_0.975 <dbl>, width_of_95_percent_credible_interval <dbl>, rel_abundance <dbl>, #> #   obs_rel_abundance <dbl>, n_routes <dbl>, mean_n_routes <dbl>, n_strata_included <dbl>, backcast_flag <dbl> #>  #> $meta_data #> $meta_data$stratify_by #> [1] \"bbs_usgs\" #>  #> $meta_data$stratify_type #> [1] \"standard\" #>  #> $meta_data$species #> [1] \"Scissor-tailed Flycatcher\" #>  #> $meta_data$model #> [1] \"gamye\" #>  #> $meta_data$model_variant #> [1] \"spatial\" #>  #> $meta_data$model_file #> [1] \"C:/Users/SmithAC/AppData/Local/R/win-library/4.2/bbsBayes2/models/gamye_spatial_bbs_CV.stan\" #>  #> $meta_data$run_date #> [1] \"2023-02-13 07:24:57 EST\" #>  #> $meta_data$bbsBayes2_version #> [1] \"1.0.0\" #>  #> $meta_data$cmdstan_path #> [1] \"C:/Users/SmithAC/Documents/.cmdstan/wsl-cmdstan-2.30.1\" #>  #> $meta_data$cmdstan_version #> [1] \"2.30.1\" #>  #> $meta_data$regions #> [1] \"continent\" \"stratum\"   #>  #> $meta_data$start_year #> [1] 1967 #>  #> $meta_data$n_years #> [1] 55 #>  #>  #> $meta_strata #> # A tibble: 25 × 5 #>    strata_name strata area_sq_km continent stratum  #>    <chr>        <dbl>      <dbl> <chr>     <chr>    #>  1 US-AR-24         1     33232. continent US-AR-24 #>  2 US-AR-25         2     65340. continent US-AR-25 #>  3 US-AR-26         3     39366. continent US-AR-26 #>  4 US-KS-18         4     37179. continent US-KS-18 #>  5 US-KS-19         5    109390. continent US-KS-19 #>  6 US-KS-22         6     66243. continent US-KS-22 #>  7 US-LA-25         7     47075. continent US-LA-25 #>  8 US-LA-37         8     24987. continent US-LA-37 #>  9 US-MO-22         9     83079. continent US-MO-22 #> 10 US-MO-24        10     87034. continent US-MO-24 #> # ℹ 15 more rows #>  #> $raw_data #> # A tibble: 12,626 × 23 #>    country_num state_num state     rpid   bcr  year strata_name route   obs_n count n_routes non_zero_weight #>          <dbl>     <dbl> <chr>    <dbl> <dbl> <dbl> <chr>       <chr>   <dbl> <dbl>    <int>           <dbl> #>  1         840         7 ARKANSAS   101    24  1967 US-AR-24    7-20  1190020     0       12               1 #>  2         840         7 ARKANSAS   101    24  1968 US-AR-24    7-20  1190020     0       12               1 #>  3         840         7 ARKANSAS   101    24  1969 US-AR-24    7-20  1190020     0       12               1 #>  4         840         7 ARKANSAS   101    24  1970 US-AR-24    7-20  1190020     0       12               1 #>  5         840         7 ARKANSAS   101    24  1971 US-AR-24    7-20  1190020     0       12               1 #>  6         840         7 ARKANSAS   101    24  1972 US-AR-24    7-20  1190020     0       12               1 #>  7         840         7 ARKANSAS   101    24  1973 US-AR-24    7-20  1190020     0       12               1 #>  8         840         7 ARKANSAS   101    24  1974 US-AR-24    7-20  1190020     0       12               1 #>  9         840         7 ARKANSAS   101    24  1975 US-AR-24    7-20  1190020     0       12               1 #> 10         840         7 ARKANSAS   101    24  1976 US-AR-24    7-20  1190020     0       12               1 #> # ℹ 12,616 more rows #> # ℹ 11 more variables: first_year <dbl>, max_n_routes_year <int>, n_obs <int>, mean_obs <dbl>, year_num <dbl>, #> #   strata <dbl>, observer <int>, site <int>, obs_route <chr>, obs_site <int>, n_obs_sites <int> t_10 <- generate_trends(i,                         min_year = 2011,                         max_year = 2021) t_10 #> $trends #> # A tibble: 26 × 27 #>    start_year end_year region    region_type strata_included    strata_excluded  trend trend_q_0.025 trend_q_0.05 #>         <dbl>    <dbl> <chr>     <chr>       <chr>              <chr>            <dbl>         <dbl>        <dbl> #>  1       2011     2021 continent continent   US-AR-24 ; US-AR-… \"\"              -2.39          -3.21       -3.08  #>  2       2011     2021 US-AR-24  stratum     US-AR-24           \"\"               2.23          -1.56       -0.942 #>  3       2011     2021 US-AR-25  stratum     US-AR-25           \"\"              -0.449         -3.07       -2.68  #>  4       2011     2021 US-AR-26  stratum     US-AR-26           \"\"               3.87          -2.70       -1.70  #>  5       2011     2021 US-KS-18  stratum     US-KS-18           \"\"               5.19          -3.53       -1.90  #>  6       2011     2021 US-KS-19  stratum     US-KS-19           \"\"               1.16          -2.15       -1.64  #>  7       2011     2021 US-KS-22  stratum     US-KS-22           \"\"              -4.42          -6.92       -6.53  #>  8       2011     2021 US-LA-25  stratum     US-LA-25           \"\"              -2.92         -10.1        -9.06  #>  9       2011     2021 US-LA-37  stratum     US-LA-37           \"\"               3.84          -4.79       -3.58  #> 10       2011     2021 US-MO-22  stratum     US-MO-22           \"\"               2.76          -5.91       -4.37  #> # ℹ 16 more rows #> # ℹ 18 more variables: trend_q_0.25 <dbl>, trend_q_0.75 <dbl>, trend_q_0.95 <dbl>, trend_q_0.975 <dbl>, #> #   percent_change <dbl>, percent_change_q_0.025 <dbl>, percent_change_q_0.05 <dbl>, #> #   percent_change_q_0.25 <dbl>, percent_change_q_0.75 <dbl>, percent_change_q_0.95 <dbl>, #> #   percent_change_q_0.975 <dbl>, width_of_95_percent_credible_interval <dbl>, rel_abundance <dbl>, #> #   obs_rel_abundance <dbl>, n_routes <dbl>, mean_n_routes <dbl>, n_strata_included <dbl>, backcast_flag <dbl> #>  #> $meta_data #> $meta_data$stratify_by #> [1] \"bbs_usgs\" #>  #> $meta_data$stratify_type #> [1] \"standard\" #>  #> $meta_data$species #> [1] \"Scissor-tailed Flycatcher\" #>  #> $meta_data$model #> [1] \"gamye\" #>  #> $meta_data$model_variant #> [1] \"spatial\" #>  #> $meta_data$model_file #> [1] \"C:/Users/SmithAC/AppData/Local/R/win-library/4.2/bbsBayes2/models/gamye_spatial_bbs_CV.stan\" #>  #> $meta_data$run_date #> [1] \"2023-02-13 07:24:57 EST\" #>  #> $meta_data$bbsBayes2_version #> [1] \"1.0.0\" #>  #> $meta_data$cmdstan_path #> [1] \"C:/Users/SmithAC/Documents/.cmdstan/wsl-cmdstan-2.30.1\" #>  #> $meta_data$cmdstan_version #> [1] \"2.30.1\" #>  #> $meta_data$regions #> [1] \"continent\" \"stratum\"   #>  #> $meta_data$start_year #> [1] 1967 #>  #> $meta_data$n_years #> [1] 55 #>  #>  #> $meta_strata #> # A tibble: 25 × 5 #>    strata_name strata area_sq_km continent stratum  #>    <chr>        <dbl>      <dbl> <chr>     <chr>    #>  1 US-AR-24         1     33232. continent US-AR-24 #>  2 US-AR-25         2     65340. continent US-AR-25 #>  3 US-AR-26         3     39366. continent US-AR-26 #>  4 US-KS-18         4     37179. continent US-KS-18 #>  5 US-KS-19         5    109390. continent US-KS-19 #>  6 US-KS-22         6     66243. continent US-KS-22 #>  7 US-LA-25         7     47075. continent US-LA-25 #>  8 US-LA-37         8     24987. continent US-LA-37 #>  9 US-MO-22         9     83079. continent US-MO-22 #> 10 US-MO-24        10     87034. continent US-MO-24 #> # ℹ 15 more rows #>  #> $raw_data #> # A tibble: 12,626 × 23 #>    country_num state_num state     rpid   bcr  year strata_name route   obs_n count n_routes non_zero_weight #>          <dbl>     <dbl> <chr>    <dbl> <dbl> <dbl> <chr>       <chr>   <dbl> <dbl>    <int>           <dbl> #>  1         840         7 ARKANSAS   101    24  1967 US-AR-24    7-20  1190020     0       12               1 #>  2         840         7 ARKANSAS   101    24  1968 US-AR-24    7-20  1190020     0       12               1 #>  3         840         7 ARKANSAS   101    24  1969 US-AR-24    7-20  1190020     0       12               1 #>  4         840         7 ARKANSAS   101    24  1970 US-AR-24    7-20  1190020     0       12               1 #>  5         840         7 ARKANSAS   101    24  1971 US-AR-24    7-20  1190020     0       12               1 #>  6         840         7 ARKANSAS   101    24  1972 US-AR-24    7-20  1190020     0       12               1 #>  7         840         7 ARKANSAS   101    24  1973 US-AR-24    7-20  1190020     0       12               1 #>  8         840         7 ARKANSAS   101    24  1974 US-AR-24    7-20  1190020     0       12               1 #>  9         840         7 ARKANSAS   101    24  1975 US-AR-24    7-20  1190020     0       12               1 #> 10         840         7 ARKANSAS   101    24  1976 US-AR-24    7-20  1190020     0       12               1 #> # ℹ 12,616 more rows #> # ℹ 11 more variables: first_year <dbl>, max_n_routes_year <int>, n_obs <int>, mean_obs <dbl>, year_num <dbl>, #> #   strata <dbl>, observer <int>, site <int>, obs_route <chr>, obs_site <int>, n_obs_sites <int> trend_map <- plot_map(t) print(trend_map) strata_with_data <- t$meta_strata # meta data in trend object - strata information # load the original strata map used in the model fitting # then filter to just the strata with data for this species data_bounding_box <- load_map(stratify_by = t$meta_data$stratify_by) %>%   filter(strata_name %in% strata_with_data$strata_name) %>%   sf::st_bbox() # create a bounding box for x and y limits  t_mod <- trend_map +   coord_sf(xlim = data_bounding_box[c(\"xmin\",\"xmax\")],            ylim = data_bounding_box[c(\"ymin\",\"ymax\")])  print(t_mod)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/bbsBayes2.html","id":"example-models","dir":"Articles","previous_headings":"Welcome! > Workflow to explore the model outputs","what":"Example models","title":"Get Started","text":"model suitable number iterations takes long time run (Barn Swallow model, species many data many strata, took 54 hours). three full models run 1000 iterations four chains. Use test features! can download zip-file saved model output Barn Swallow . example output applying spatial gamye model Barn Swallow data. Unzip file store local directory. example, ’ve placed sub-directory working directory called output.  , ’ve plotted full annual indices (.e., population trajectory) gamye model. gamye slope models, population trajectory can decomposed two components: smooth component annual fluctuations around smooth. default estimate population trajectory uses full version annual indices (generate_indices(alternate_n = \"n\")). gamye model alternate population trajectory represents semi-parametric smooth component can accessed choosing generate_indices(alternate_n = \"n_smooth\") option. slope model alternate population trajectory represents linear smooth can accessed choosing generate_indices(alternate_n = \"n_slope\") option. smooth trajectories may useful trend estimates vary less year--year (gamye model) overall linear trend slope model applied short time-frame (’s probably unlikely linear smooth reasonable long periods time).  can also add smoothed annual indices plots full annual indices , taking advantage ggplot2 functions.  Check articles explore advanced usage function reference see functions available use greater detail.","code":"#First is a spatial GAMYE model for the Barn Swallow   BARS <- readRDS(\"output/Barn_Swallow_gamye_spatial.rds\") #investigate model meta data BARS$meta_data #> $stratify_by #> [1] \"bbs_cws\" #>  #> $stratify_type #> [1] \"standard\" #>  #> $species #> [1] \"Barn Swallow\" #>  #> $model #> [1] \"gamye\" #>  #> $model_variant #> [1] \"spatial\" #>  #> $model_file #> [1] \"C:/Users/SmithAC/AppData/Local/R/win-library/4.2/bbsBayes2/models/gamye_spatial_bbs_CV.stan\" #>  #> $run_date #> [1] \"2023-01-20 13:27:49 EST\" #>  #> $bbsBayes2_version #> [1] \"1.0.0\" #>  #> $cmdstan_path #> [1] \"C:/Users/SmithAC/Documents/.cmdstan/wsl-cmdstan-2.30.1\" #>  #> $cmdstan_version #> [1] \"2.30.1\" #length of run-time in seconds BARS$model_fit$time() #> $total #> [1] 197011.7 #>  #> $chains #>   chain_id   warmup sampling  total #> 1        1  82393.1  46100.9 128494 #> 2        2  85907.6 111101.0 197009 #> 3        3 113442.0  54516.1 167958 #> 4        4 113073.0  54597.2 167670 #length of run-time in hours BARS$model_fit$time()$total/3600 #> [1] 54.72546  BARS_indices <- generate_indices(BARS) #> Processing region continent #> Processing region stratum  BARS_index_plots <- plot_indices(BARS_indices,                                  add_observed_means = TRUE,                                  add_number_routes = TRUE)  BARS_continent <- BARS_index_plots[[\"continent\"]] print(BARS_continent) BARS_smooth_indices <- generate_indices(BARS,                                  alternate_n = \"n_smooth\") #> Processing region continent #> Processing region stratum BARS_trends <- generate_trends(BARS_smooth_indices) BARS_trend_map <- plot_map(BARS_trends) BARS_trend_map smooth_cont_indices <- BARS_smooth_indices$indices %>%   filter(region == \"continent\") BARS_continent_both <- BARS_continent +   ggplot2::geom_line(data = smooth_cont_indices,                      ggplot2::aes(x = year, y = index),                      alpha = 0.5,                      linewidth = 1)+   ggplot2::labs(subtitle = \"grey line represents the smoothed annual indices\")  print(BARS_continent_both)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"the-models","dir":"Articles","previous_headings":"","what":"The models","title":"Models in bbsBayes2","text":"four models differ way estimate time-series components.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"first-difference-models","dir":"Articles","previous_headings":"The models","what":"1. First Difference Models","title":"Models in bbsBayes2","text":"first-difference model considers time-series random-walk forward backwards time mid-year time-series, first-differences sequence year-effects random effects mean = 0 estimated variance. non-hierarchical variant model model described Link et al., 2017 hierarchical spatial variants described Smith et al., 2023 pre-print.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"generalized-additive-models","dir":"Articles","previous_headings":"The models","what":"2. Generalized Additive Models","title":"Models in bbsBayes2","text":"GAM models time series semiparametric smooth using Generalized Additive Model (GAM) structure. model unique among bbsBayes2 models model annual fluctuations, smoothed changes population size time. result, makes strong assumptions population change. See Smith & Edwards, 2021 original formulation. updated hierarchical spatial variants model described Smith et al., 2023 pre-print.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"generalized-additive-models-with-year-effect","dir":"Articles","previous_headings":"The models","what":"3. Generalized Additive Models with Year Effect","title":"Models in bbsBayes2","text":"GAMYE includes semiparametric smooth used gam option, also includes random year-effect terms track annual fluctuations around smooth. model Canadian Wildlife Service now using annual status trend estimates. See Smith et al., 2023 pre-print details Stan version model see Smith & Edwards, 2021 original formulation.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"slope","dir":"Articles","previous_headings":"The models","what":"4. Slope","title":"Models in bbsBayes2","text":"slope model estimates time series log-linear regression random year-effect terms allow trajectory depart smooth log-linear regression line. model used USGS CWS estimate BBS trends 2011 2018. basic model first described 2002 Link Sauer 2002 application annual status trend estimates documented Sauer Link, 2011 Smith et al., 2014.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"the-variants","dir":"Articles","previous_headings":"","what":"The variants","title":"Models in bbsBayes2","text":"variants differ way treat variation among strata abundance trend components models.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"hierarchical-variants","dir":"Articles","previous_headings":"The variants","what":"Hierarchical variants","title":"Models in bbsBayes2","text":"Hierarchical variants variant = \"hier\" default variants model. variants share information species abundance population trends, estimates stratum pulled shrunk closer mean across strata. abundance trend parameters estimated hierarchical effects (also sometimes called random effects partial pooling) strata treated groups parameters allowed vary among groups. among-strata variation modeled relatively simple normal distribution estimated mean standard deviation.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"spatial-variants","dir":"Articles","previous_headings":"The variants","what":"Spatial variants","title":"Models in bbsBayes2","text":"Spatial variants variant = \"spatial\" hierarchical spatial, sharing information among strata abundance trends, sharing explicitly spatial way. means stratum’s estimates pulled closer mean neighbors. spatial components estimated using intrinsic Conditional Autoregressive (iCAR) structure Besag et al. 1991, ver Hoef et al. 2018, using Stan code derived Morris et al. 2019","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"non-hierarchical-variant-first-difference-only","dir":"Articles","previous_headings":"The variants","what":"Non-hierarchical variant (first-difference only)","title":"Models in bbsBayes2","text":"non-hierarchical variant first-difference model model = \"first_diff\", variant = \"nonhier\" share information among strata abundance trends components. included support approximate replication USGS trend analyses. estimates abundance population trends stratum independently estimates strata. Importantly, although refer model non-hierarchical, refers among-strata sharing information. hierarchical model; uses hierarchical structures model variation among routes observers, annual differences populations within strata also modeled hierarchical effects.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"more-background-reading","dir":"Articles","previous_headings":"","what":"More background reading","title":"Models in bbsBayes2","text":"models bbsBayes2 best described contrasted Smith et al., 2023 pre-print. models variants differ way estimate parameters important understanding status trends bird populations. , vary way estimate relative abundance temporal-changes relative abundance (population trends), within among strata. Otherwise, identical share set parameters designed adjust estimates variations among observers, routes, first-year observer start-effects. details development Bayesian hierarchical models BBS observer-effects, see Link Sauer 2002, Sauer Link, 2011, Smith et al., 2014, Link et al., 2017, Link et al. 2020, Smith & Edwards, 2021.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/models.html","id":"one-species-nine-models","dir":"Articles","previous_headings":"","what":"One species, nine-models","title":"Models in bbsBayes2","text":"example application nine models variants applied data set. example, ’ve used data Scissor-tailed Flycatcher. can download fitted model results nine models zipped file . Unzip file save .rds files sub-directory working directory called output replicate code . following code chunk loads fitted model objects, calculates annual indices trends, saves continent population trajectories long-term (1966-2021) trend maps. species moderately rich data across much range (portion range covered BBS surveys), estimated population trajectories similar across different models.  Similarly, long-term trend maps generally similar across different models variants.","code":"saved_trajectories <- NULL saved_trend_maps <- vector(\"list\",9) species <- \"Scissor-tailed Flycatcher\" # extract the unique numerical identifier for this species in the BBS database species_number <- search_species(species) %>%   select(aou) %>%   unlist()    for(j in 1:nrow(bbs_models)){   m <- readRDS(paste0(\"output/\",                       species_number,                       \"_\",                       bbs_models[j,\"model\"],                       \"_\",                       bbs_models[j,\"variant\"],                       \".rds\"))    i <- generate_indices(m)    trajs <- i$indices %>%     filter(region == \"continent\") %>%     mutate(model = as.character(bbs_models[j,\"model\"]),            variant = as.character(bbs_models[j,\"variant\"]))   saved_trajectories <- bind_rows(saved_trajectories,                         trajs)      t <- generate_trends(i)    strata_with_data <- t$meta_strata # meta data in trend object - strata information # load the original strata map used in the model fitting # then filter to just the strata with data for this species data_bounding_box <- load_map(stratify_by = t$meta_data$stratify_by) %>%   filter(strata_name %in% strata_with_data$strata_name) %>%   sf::st_bbox() # create a bounding box for x and y limits    map <- plot_map(t) +     labs(title = paste(bbs_models[j,\"model\"],                        bbs_models[j,\"variant\"]))+   coord_sf(xlim = data_bounding_box[c(\"xmin\",\"xmax\")],            ylim = data_bounding_box[c(\"ymin\",\"ymax\")])+     theme(legend.position = \"none\")    saved_trend_maps[[j]] <- map  } traj_panel <- ggplot(data = saved_trajectories,                      aes(x = year, y = index)) +   geom_ribbon(aes(ymin = index_q_0.025,                   ymax = index_q_0.975,                   fill = variant),               alpha = 0.3)+   geom_line(aes(colour = variant))+   geom_point(aes(x = year, y = obs_mean),              alpha = 0.1)+   scale_colour_viridis_d(aesthetics = c(\"colour\",\"fill\"))+   facet_grid(rows = vars(model))+   scale_y_continuous(limits = c(0,NA))  print(traj_panel) #> Warning: Removed 9 rows containing missing values (`geom_point()`). map_panel <- patchwork::wrap_plots(saved_trend_maps,                                     ncol = 3,                                     guides = \"collect\")  print(map_panel)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"stratifying-with-built-in-stratifications","dir":"Articles","previous_headings":"","what":"Stratifying with built-in stratifications","title":"Stratification","text":"built-stratifications bbs_usgs, bbs_cws, bcr, latlong, prov_state. bbs_cws – Intersections Political regions X Bird Conservation Regions (Stratification used Canadian Wildlife Service [CWS] national status reporting) bbs_usgs – Intersections Political regions X Bird Conservation Regions (Stratification used United Status Geological Survey [USGS] national status reporting) bcr – Bird Conservation Regions prov_state – Political regions - states, provinces, territories latlong – Grid-cells 1 degree latitude X 1 degree longitude, aka “degree-blocks”. original survey design strata BBS. Routes established randomized locations within degree-blocks. can visualize stratifications looking maps included bbsBayes2 load_map().  stratify BBS data, can use existing stratifications specifying = \"name\" stratify() function.","code":"ggplot(data = load_map(\"bbs_usgs\"), aes(fill = strata_name)) +   geom_sf() +   scale_fill_viridis_d(guide = \"none\") s <- stratify(by = \"bbs_usgs\", species = \"Canada Jay\") #> Using 'bbs_usgs' (standard) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #>   Renaming routes..."},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"the-latlong-stratification","dir":"Articles","previous_headings":"Stratifying with built-in stratifications","what":"The latlong stratification","title":"Stratification","text":"latlong stratification = \"latlong\" finest-scale stratification built package, divides BBS data many strata-units stratifications. Therefore, may wish adjust minimum data inclusion criteria preparing data. Specifically, setting min_n_routes = 1 ensures every grid-cell least one BBS route can included. many degree-blocks one route, original sampling design goal BBS (least one route within degree-block).","code":"s <- stratify(by = \"latlong\", species = \"Canada Jay\") #> Using 'latlong' (standard) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #>   Renaming routes... #>   Omitting 80/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify) p <- prepare_data(s, min_n_routes = 1)"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"load-a-custom-stratification-map","dir":"Articles","previous_headings":"Custom stratifications","what":"Load a custom stratification map","title":"Stratification","text":"define completely different stratification, ’ll need provide spatial data object polygons defining strata. example ’ll use WBPHS stratum boundaries 2019. available available US Fish Wildlife Service Catalogue: https://ecos.fws.gov/ServCat/Reference/Profile/142628 can either download hand, following code. zip file also available Google Drive use file bbsBayes2, need load sf object using sf package.  see one column reflects stratum names. First ’ll rename column strata_name stratify() requires. Now spatial data relevant information pass stratify(). using custom stratification, argument becomes name want apply. Let’s use something informative, short (although ’s limit). also need give function map. Note strata names automatically put lower case consistency. can take quick look output, looking meta data routes contained therein. get different look can also plot data top map using ggplot2. Note use factor() ensure strata names categorical.  Based message received stratification (Omitting...) map, looks custom stratification excluding BBS data. can re-run stratification return_omitted = TRUE attach data frame omitted strata output. Let’s take look visually.  map shows omitted routes routes clearly outside desired stratification. also show BBS route start-points just outside strata (e.g., routes Nova Scotia Alaska). user can decide sorts minor overlap issues. example, buffering original stratification map might make sense situations. fit model, follow standard workflow using stratified data.","code":"z <- \"output/WBPHS_Stratum_Boundaries_2019.zip\" #  download.file(url = \"https://ecos.fws.gov/ServCat/DownloadFile/213149\",               destfile = z,               cacheOK = FALSE) unzip(z)  # Unzip - if you get a file is corrupt message, download it manually unlink(z) # Remove the zipped file map <- sf::read_sf(\"output/WBPHS_stratum_boundaries_2019.shp\") ggplot(map, aes(fill = factor(STRAT))) +   geom_sf() +   scale_fill_viridis_d(guide = \"none\") map <- rename(map, strata_name = STRAT) s <- stratify(by = \"WBPHS_2019\", species = \"Canada Jay\", strata_custom = map) #> Using 'wbphs_2019' (custom) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #> Preparing custom strata (EPSG:4326; WGS 84)... #>   Summarizing strata... #>   Calculating area weights... #>   Joining routes to custom spatial data... #>   Renaming routes... #>   Omitting 100,155/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify) s[[\"meta_data\"]] #> $stratify_by #> [1] \"wbphs_2019\" #>  #> $stratify_type #> [1] \"custom\" #>  #> $species #> [1] \"Canada Jay\"  s[[\"routes_strata\"]] #> # A tibble: 19,412 × 33 #>    strata_name country_num state_num route route_name   active latitude longitude   bcr route_type_id #>    <chr>             <dbl>     <dbl> <chr> <chr>         <dbl>    <dbl>     <dbl> <dbl>         <dbl> #>  1 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  2 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  3 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  4 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  5 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  6 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  7 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  8 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #>  9 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #> 10 3                   840         3 3-8   TOWER BLUFFS      1     63.6     -144.     4             1 #> # ℹ 19,402 more rows #> # ℹ 23 more variables: route_type_detail_id <dbl>, route_data_id <dbl>, rpid <dbl>, year <dbl>, month <dbl>, #> #   day <dbl>, obs_n <dbl>, total_spp <dbl>, start_temp <dbl>, end_temp <dbl>, temp_scale <chr>, #> #   start_wind <dbl>, end_wind <dbl>, start_sky <dbl>, end_sky <dbl>, start_time <dbl>, end_time <dbl>, #> #   assistant <dbl>, quality_current_id <dbl>, run_type <dbl>, state <chr>, st_abrev <chr>, country <chr> rts <- s[[\"routes_strata\"]] %>%   st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)  ggplot() +   geom_sf(data = map, aes(fill = factor(strata_name)), alpha = 0.3) +   geom_sf(data = rts, aes(colour = factor(strata_name)), size = 1) +   scale_fill_viridis_d(aesthetics = c(\"colour\", \"fill\"), guide = \"none\") s <- stratify(by = \"WBPHS_2019\", species = \"Canada Jay\", strata_custom = map,               return_omitted = TRUE) #> Using 'wbphs_2019' (custom) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #> Preparing custom strata (EPSG:4326; WGS 84)... #>   Summarizing strata... #>   Calculating area weights... #>   Joining routes to custom spatial data... #>   Renaming routes... #>   Omitting 100,155/119,567 route-years that do not match a stratum. #>     Returning omitted routes. s[[\"routes_omitted\"]] #> # A tibble: 100,155 × 11 #>     year strata_name country state   route route_name latitude longitude   bcr   obs_n total_spp #>    <dbl> <chr>       <chr>   <chr>   <chr> <chr>         <dbl>     <dbl> <dbl>   <dbl>     <dbl> #>  1  1967 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1140018        56 #>  2  1969 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27  990062        52 #>  3  1970 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27  990062        52 #>  4  1971 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27  990062        56 #>  5  1972 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27  990062        54 #>  6  1973 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1060057        52 #>  7  1974 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1060057        55 #>  8  1975 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1060057        59 #>  9  1976 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1060057        56 #> 10  1977 <NA>        US      ALABAMA 2-1   ST FLORIAN     34.9     -87.6    27 1060057        51 #> # ℹ 100,145 more rows omitted <- st_as_sf(s[[\"routes_omitted\"]], coords = c(\"longitude\", \"latitude\"),                     crs= 4326)  ggplot() +   geom_sf(data = map, aes(fill = factor(strata_name)), alpha = 0.3) +   geom_sf(data = rts, aes(colour = factor(strata_name)), size = 1, alpha = 0.5) +   geom_sf(data = omitted, size = 0.75, alpha = 0.5) +   scale_fill_viridis_d(aesthetics = c(\"colour\", \"fill\"), guide = \"none\") p <- prepare_data(s,                   min_year = 2000,                   max_year = 2021) #subset a shorter time-span to speed model-fit mp <- prepare_model(p,model = \"slope\",                    model_variant = \"hier\") m <- run_model(mp,                iter_warmup = 500,                iter_sampling = 100)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"looking-at-indices-and-trends","dir":"Articles","previous_headings":"Custom stratifications > Load a custom stratification map","what":"Looking at indices and trends","title":"Stratification","text":"Now can start look indices trends related model. can apply generate_indices() generate_trends() functions output model, built-stratifications. one additional argument, can also use plot_map() function.  generate_indices() creates indices different regional levels. default “continent” “stratum”, can add “prov_state”, “bcr”, “bcr_by_country” (appropriate). can also create regional divisions provide regions_index data frame. example, let’s imagine like calculate regional indices stratum, country, province/state, well custom division east vs. west. First ’ll need tell function strata belong province state, belong ‘east’ ’west. ’ll start using helper function assign_prov_state(). function takes map strata assigns strata province state depending amount overlap. default warn amount overlap less 75%, case, lower cutoff 60%. plot gives us chance make quick assessment whether ’re happy various strata assigned.  Next ’ll define east/west divide hand. plot strata name, can pick eastern western.  Let’s add column splitting strata eastern western now double check!  Now ’ll create indices trends can plot indices plot_indices() creates list plots.  Finally can even create geofaceted plots (possible case assigned strata Provinces States calculated indices regions).","code":"i <- generate_indices(m) #> Processing region continent #> Processing region stratum  t <- generate_trends(i) trend_map <- plot_map(t, strata_custom = map) trend_map rindex <- assign_prov_state(map, min_overlap = 0.6, plot = TRUE) ggplot(rindex) +   geom_sf(data = load_map(type = \"North America\")) +   geom_sf() +   geom_sf_text(aes(label = strata_name)) #> Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not give correct results for #> longitude/latitude data rindex <- mutate(   rindex,   east_west = if_else(as.numeric(strata_name) < 50 | as.numeric(strata_name) > 74,                       \"west\",                       \"east\")) ggplot(data = rindex) +   geom_sf(data = load_map(type = \"North America\")) +   geom_sf(data = rindex, aes(fill = east_west), alpha = 0.5) i <- generate_indices(   m,   regions = c(\"stratum\", \"country\", \"prov_state\", \"east_west\"),   regions_index = rindex) #> Processing region stratum #> Processing region country #> Processing region prov_state #> Processing region east_west  t <- generate_trends(i) p <- plot_indices(i) names(p) #>  [1] \"1\"                        \"14\"                       \"17\"                       \"18\"                       #>  [5] \"2\"                        \"22\"                       \"23\"                       \"24\"                       #>  [9] \"26\"                       \"3\"                        \"31\"                       \"44\"                       #> [13] \"50\"                       \"51\"                       \"52\"                       \"56\"                       #> [17] \"62\"                       \"63\"                       \"64\"                       \"66\"                       #> [21] \"67\"                       \"68\"                       \"69\"                       \"71\"                       #> [25] \"72\"                       \"75\"                       \"76\"                       \"77\"                       #> [29] \"Canada\"                   \"United_States_of_America\" \"AB\"                       \"AK\"                       #> [33] \"MB\"                       \"ME\"                       \"NB\"                       \"NL\"                       #> [37] \"NS\"                       \"NT\"                       \"ON\"                       \"QC\"                       #> [41] \"SD\"                       \"SK\"                       \"east\"                     \"west\"  p[[\"east\"]] + p[[\"west\"]] plot_geofacet(i, trends = t, multiple = TRUE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"subsetting-an-existing-stratification","dir":"Articles","previous_headings":"Custom stratifications","what":"Subsetting an existing stratification","title":"Stratification","text":"want use BBS CWS stratification, really want look Canadian regions? case ’ll subset BBS CWS stratification give stratify() data set addition specification. addition maps, stratifications available data frames bbs_strata object. can now modify use data frame like. Note stratification now “bbs_cws” “subset” can see strata included looking meta_strata","code":"names(bbs_strata) #> [1] \"bbs_usgs\"   \"bbs_cws\"    \"bcr\"        \"latlong\"    \"prov_state\" head(bbs_strata[[\"bbs_cws\"]]) #> # A tibble: 6 × 7 #>   strata_name area_sq_km country country_code prov_state   bcr bcr_by_country #>   <chr>            <dbl> <chr>   <chr>        <chr>      <dbl> <chr>          #> 1 CA-AB-10        52565. Canada  CA           AB            10 Canada-BCR_10  #> 2 CA-AB-11       149352. Canada  CA           AB            11 Canada-BCR_11  #> 3 CA-AB-6        445135. Canada  CA           AB             6 Canada-BCR_6   #> 4 CA-AB-8          6987. Canada  CA           AB             8 Canada-BCR_8   #> 5 CA-BC-10       383006. Canada  CA           BC            10 Canada-BCR_10  #> 6 CA-BC-4        193180. Canada  CA           BC             4 Canada-BCR_4 my_cws <- filter(bbs_strata[[\"bbs_cws\"]], country == \"Canada\") s <- stratify(by = \"bbs_cws\", species = \"Canada Jay\", strata_custom = my_cws) #> Using 'bbs_cws' (subset) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... #>   Omitting 101,474/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify) s[[\"meta_data\"]] #> $stratify_by #> [1] \"bbs_cws\" #>  #> $stratify_type #> [1] \"subset\" #>  #> $species #> [1] \"Canada Jay\" print(s[[\"meta_strata\"]], n = Inf) #> # A tibble: 30 × 7 #>    strata_name area_sq_km country country_code prov_state   bcr bcr_by_country #>    <chr>            <dbl> <chr>   <chr>        <chr>      <dbl> <chr>          #>  1 CA-AB-10        52565. Canada  CA           AB            10 Canada-BCR_10  #>  2 CA-AB-11       149352. Canada  CA           AB            11 Canada-BCR_11  #>  3 CA-AB-6        445135. Canada  CA           AB             6 Canada-BCR_6   #>  4 CA-BC-10       383006. Canada  CA           BC            10 Canada-BCR_10  #>  5 CA-BC-4        193180. Canada  CA           BC             4 Canada-BCR_4   #>  6 CA-BC-5        199820. Canada  CA           BC             5 Canada-BCR_5   #>  7 CA-BC-6        106917. Canada  CA           BC             6 Canada-BCR_6   #>  8 CA-BC-9         59939. Canada  CA           BC             9 Canada-BCR_9   #>  9 CA-BCR7-7     1743744. Canada  CA           BCR7           7 Canada-BCR_7   #> 10 CA-MB-11        70101. Canada  CA           MB            11 Canada-BCR_11  #> 11 CA-MB-12        15312. Canada  CA           MB            12 Canada-BCR_12  #> 12 CA-MB-6        127190. Canada  CA           MB             6 Canada-BCR_6   #> 13 CA-MB-8        234151. Canada  CA           MB             8 Canada-BCR_8   #> 14 CA-NB-14        72991. Canada  CA           NB            14 Canada-BCR_14  #> 15 CA-NL-8        157083. Canada  CA           NL             8 Canada-BCR_8   #> 16 CA-NSPE-14      61502. Canada  CA           NSPE          14 Canada-BCR_14  #> 17 CA-NT-3        394769. Canada  CA           NT             3 Canada-BCR_3   #> 18 CA-NT-6        509423. Canada  CA           NT             6 Canada-BCR_6   #> 19 CA-NU-3       1969549. Canada  CA           NU             3 Canada-BCR_3   #> 20 CA-ON-12       206181. Canada  CA           ON            12 Canada-BCR_12  #> 21 CA-ON-13        83859. Canada  CA           ON            13 Canada-BCR_13  #> 22 CA-ON-8        435545. Canada  CA           ON             8 Canada-BCR_8   #> 23 CA-QC-12       174314. Canada  CA           QC            12 Canada-BCR_12  #> 24 CA-QC-13        28409. Canada  CA           QC            13 Canada-BCR_13  #> 25 CA-QC-14        67711. Canada  CA           QC            14 Canada-BCR_14  #> 26 CA-QC-8        470310. Canada  CA           QC             8 Canada-BCR_8   #> 27 CA-SK-11       241315. Canada  CA           SK            11 Canada-BCR_11  #> 28 CA-SK-6        177763. Canada  CA           SK             6 Canada-BCR_6   #> 29 CA-SK-8        188615. Canada  CA           SK             8 Canada-BCR_8   #> 30 CA-YT-4        435349. Canada  CA           YT             4 Canada-BCR_4"},{"path":"https://bbsbayes.github.io/bbsBayes2/articles/stratification.html","id":"modifying-existing-bbs-maps","dir":"Articles","previous_headings":"Custom stratifications","what":"Modifying existing BBS maps","title":"Stratification","text":"Stratify custom stratification, using sf map object. example, let’s look east/west divide southern Canada BBS CWS strata. First ’ll start CWS BBS data ’ll modify first looking provinces (omitting northern territories), transforming GPS CRS (4326), ensuring resulting polygons valid. Now can crop map make western eastern portion, defined longitude latitude (first transformed GPS CRS). Now ’ll bind together transform back original CRS  Looks good! Let’s use stratification take look points afterwards ensure ’ve categorized appropriately.","code":"map <- load_map(\"bbs_cws\") new_map <- map %>%   filter(country_code == \"CA\", !prov_state %in% c(\"NT\", \"NU\", \"YT\")) %>%   st_transform(4326)%>%   st_make_valid() west <- st_crop(new_map, xmin = -140, ymin = 42, xmax = -95, ymax = 68) %>%   mutate(strata_name = \"west\") #> Warning: attribute variables are assumed to be spatially constant throughout all geometries east <- st_crop(new_map, xmin = -95, ymin = 42, xmax = -52, ymax = 68) %>%   mutate(strata_name = \"east\") #> Warning: attribute variables are assumed to be spatially constant throughout all geometries new_strata <- bind_rows(west, east) %>%   st_transform(st_crs(map))  ggplot() +   geom_sf(data = map) +   geom_sf(data = new_strata, aes(fill = strata_name), alpha = 1) s <- stratify(by = \"canada_ew\", species = \"Canada Jay\",               strata_custom = new_strata) #> Using 'canada_ew' (custom) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #> Preparing custom strata (ESRI:102008; North_America_Albers_Equal_Area_Conic)... #>   Summarizing strata... #>   Calculating area weights... #>   Joining routes to custom spatial data... #>   Renaming routes... #>   Omitting 103,468/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify)  s$meta_data #> $stratify_by #> [1] \"canada_ew\" #>  #> $stratify_type #> [1] \"custom\" #>  #> $species #> [1] \"Canada Jay\" routes <- s$routes_strata %>%   st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)  ggplot() +   geom_sf(data = new_strata, aes(fill = strata_name), alpha = 1) +   geom_sf(data = routes, aes(shape = strata_name))"},{"path":"https://bbsbayes.github.io/bbsBayes2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brandon P.M. Edwards. Author, maintainer. Adam C. Smith. Author. Steffi LaZerte. Author.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Edwards, B. P. M., . C. Smith, S. LaZerte. (2023). bbsBayes2: Hierarchical Bayesian Analysis North American BBS Data. https://github.com/bbsBayes/bbsBayes2 Smith, .C., Binley, ., Daly, L., Edwards, B.P.M., Ethier, D., Frei, B., Iles, D., Meehan, T.D., Michel, N.L., Smith, P.. (2023). Spatially explicit Bayesian hierarchical models avian population status trends. https://doi.org/10.32942/X2088D Ziolkowski Jr., D.J., Lutmerding, M., Aponte, V.., Hudson, M-.R., 2022, North American Breeding Bird Survey Dataset 1966 - 2021: U.S. Geological Survey data release, https://doi.org/10.5066/P97WAZE5. Edwards, B.P.M .C. Smith. (2021). bbsBayes: R Package Hierarchical Bayesian Analysis North American Breeding Bird Survey Data. Journal Open Research Software 9(1), p.19. https://doi.org/10.5334/jors.329","code":"@Misc{,   title = {bbsBayes2: Hierarchical Bayesian Analysis of North American BBS Data},   year = {2023},   url = {https://github.com/bbsBayes/bbsBayes2},   author = {{Edwards} and B. P. M. and A. C. Smith and S. LaZerte}, } @Misc{,   title = {Spatially explicit Bayesian hierarchical models for avian population status and trends},   year = {2023},   url = {https://doi.org/10.32942/X2088D},   author = {{Smith} and {A.C.} and {Binley} and {A.} and {Daly} and {L.} and {Edwards} and {B.P.M.} and {Ethier} and {D.} and {Frei} and {B.} and {Iles} and {D.} and {Meehan} and {T.D.} and {Michel} and {N.L.} and {Smith} and {P.A.}}, } @Misc{,   title = {North American Breeding Bird Survey Dataset 1966 - 2021},   version = {2022},   publisher = {U.S. Geological Survey, Patuxent Wildlife Research Center.},   author = {{Ziolkowski Jr.} and {D.J.} and {Lutmerding} and {M.} and {Aponte} and {V.I.} and {Hudson} and {M-A.R.}}, } @Article{,   title = {bbsBayes: An R Package for Hierarchical Bayesian Analysis of North American Breeding Bird Survey Data},   year = {2021},   journal = {Journal of Open Research Software},   volume = {9},   issue = {1},   url = {https://doi.org/10.5334/jors.329},   author = {{Edwards} and Brandon PM and {Smith} and Adam C}, }"},{"path":"https://bbsbayes.github.io/bbsBayes2/index.html","id":"bbsbayes2-","dir":"","previous_headings":"","what":"Hierarchical Bayesian Analysis of North American BBS Data","title":"Hierarchical Bayesian Analysis of North American BBS Data","text":"bbsBayes2 package performing hierarchical Bayesian analysis North American Breeding Bird Survey (BBS) data. ‘bbsBayes2’ run full model analysis one species choose, can take control specify data stratified, prepared Stan, modelled. bbsBayes2 successor bbsBayes, major shift functionality. MCMC backend now Stan instead JAGS, workflow streamlined, syntax changed, new functions. vignette help get started package, three others help explain new features, choices, advanced uses: Installation instructions . See documentation overview use bbsBayes2. addition, four vignettes help users get familiar package new functionality. Getting Started vignette Stratification vignette stratification vignette explains built-options spatial stratifications well workflow required apply custom stratification. Models vignette models vignette explains four built-models differ way temporal components structured, also covers built-options error distributions differences among model variants (e.g., model_variant = \"spatial\"). Advanced vignette advanced vignette helpful users wanting take bbsBayes2 functionality , including alternate calculations population trend, customizing Stan models, adding covariates, even experimental functions allow k-fold cross-validations compare among models.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hierarchical Bayesian Analysis of North American BBS Data","text":"bbsBayes2 can installed bbsBayes R-Universe: Alternatively can install directly GitHub repository either pak (recommended) remotes packages. pak: remotes: want install developmental branch (risk!), can use following (assuming want install branch called dev). ```{r} pak::pkg_install(“bbsBayes/bbsBayes2@dev”)","code":"install.packages(\"bbsBayes2\",                  repos = c(bbsbayes = 'https://bbsbayes.r-universe.dev',                            CRAN = 'https://cloud.r-project.org')) install.packages(\"pak\") pak::pkg_install(\"bbsBayes/bbsBayes2\") install.packages(\"remotes\") remotes::install_github((\"bbsBayes/bbsBayes2\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/assign_prov_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize polygon by Province/State — assign_prov_state","title":"Categorize polygon by Province/State — assign_prov_state","text":"Categorizes custom stratification polygons province state possible. can useful calculating regional indices (generate_indices()) trends (generate_trends()) custom stratification, want create geofaceted plot (plot_geofacet()).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/assign_prov_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize polygon by Province/State — assign_prov_state","text":"","code":"assign_prov_state(   strata_map,   min_overlap = 0.75,   plot = FALSE,   keep_spatial = TRUE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/assign_prov_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize polygon by Province/State — assign_prov_state","text":"strata_map sf data frame. Strata polygons categorized. min_overlap Numeric. minimum proportion overlap stratum polygon Province State. Overlap proportion raise warnings. plot Logical. Whether plot polygons assigned Provinces States keep_spatial Logical. Whether output spatial data frame .","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/assign_prov_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize polygon by Province/State — assign_prov_state","text":"(Spatial) data frame strata assigned Province/State.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/assign_prov_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize polygon by Province/State — assign_prov_state","text":"","code":"# Demonstration of why we can't divide BCR by Provinces and States! map <- load_map(\"bcr\") assign_prov_state(map, plot = TRUE) #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) #> Warning: 28 strata are assigned to a province or state based on less than the minimum specified overlap  #> Simple feature collection with 223 features and 7 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -4748423 ymin: -1638890 xmax: 2988370 ymax: 4517253 #> Projected CRS: North_America_Albers_Equal_Area_Conic #> # A tibble: 223 × 8 #>    strata_name prov_state country                  country_code province_state   #>  * <chr>       <chr>      <chr>                    <chr>        <chr>            #>  1 BCR10       BC         United States of America US           Washington       #>  2 BCR5        BC         United States of America US           Washington       #>  3 BCR9        NV         United States of America US           Washington       #>  4 BCR10       BC         Canada                   CA           British Columbia #>  5 BCR4        AK         Canada                   CA           British Columbia #>  6 BCR5        BC         Canada                   CA           British Columbia #>  7 BCR6        NT         Canada                   CA           British Columbia #>  8 BCR9        NV         Canada                   CA           British Columbia #>  9 BCR10       BC         United States of America US           Idaho            #> 10 BCR16       CO         United States of America US           Idaho            #> # ℹ 213 more rows #> # ℹ 3 more variables: geom <GEOMETRY [m]>, p_area <dbl>, note <chr>  # Use custom stratification, using sf map object # e.g. with WBPHS stratum boundaries 2019 # available: https://ecos.fws.gov/ServCat/Reference/Profile/142628  if (FALSE) { map <- sf::read_sf(\"../WBPHS_Stratum_Boundaries_2019\") %>%   rename(strata_name = STRAT) # expects this column s <- assign_prov_state(map, plot = TRUE) # Some don't divide nicely, we could try a different min_overlap  s <- assign_prov_state(map, min_overlap = 0.6, plot = TRUE) }"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-defunct.html","id":"superseded","dir":"Reference","previous_headings":"","what":"Superseded","title":"bbsBayes2 defunct functions — bbsBayes2-defunct","text":"superseded functions","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-defunct.html","id":"no-longer-relevant","dir":"Reference","previous_headings":"","what":"No longer relevant","title":"bbsBayes2 defunct functions — bbsBayes2-defunct","text":"non-relevant functions","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-defunct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bbsBayes2 defunct functions — bbsBayes2-defunct","text":"... Original function arguments","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"bbsBayes2 deprecated functions — bbsBayes2-deprecated","title":"bbsBayes2 deprecated functions — bbsBayes2-deprecated","text":"deprecated functions","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bbsBayes2 deprecated functions — bbsBayes2-deprecated","text":"... Original function arguments","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bbsBayes2: Hierarchical Bayesian Analysis of North American BBS Data — bbsBayes2-package","title":"bbsBayes2: Hierarchical Bayesian Analysis of North American BBS Data — bbsBayes2-package","text":"North American Breeding Bird Survey (BBS) long-running program seeks monitor status trends breeding birds North America. Since start 1966, BBS accumulated 50 years data 500 species North American Birds. Given temporal spatial structure data, hierarchical Bayesian models used assess status trends 500+ species birds. 'bbsBayes2' allows perform hierarchical Bayesian analysis BBS data. can run full model analysis one species choose, can take control specify data stratified, prepared 'JAGS', modelled. functions provided allow replicate analyses performed United State Geological Survey (USGS, see Link Sauer (2011) doi:10.1525/auk.2010.09220 ) Canadian Wildlife Service (CWS, see Smith Edwards (2020) doi:10.1101/2020.03.26.010215 ).","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbsBayes2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bbsBayes2: Hierarchical Bayesian Analysis of North American BBS Data — bbsBayes2-package","text":"Maintainer: Brandon P.M. Edwards brandonedwards3@cmail.carleton.ca Authors: Adam C. Smith adam.smith2@canada.ca Steffi LaZerte steffi@steffi.ca","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample BBS data — bbs_data_sample","title":"Sample BBS data — bbs_data_sample","text":"Contains Pacific Wren data","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample BBS data — bbs_data_sample","text":"","code":"bbs_data_sample"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":"bbs-data-sample","dir":"Reference","previous_headings":"","what":"bbs_data_sample","title":"Sample BBS data — bbs_data_sample","text":"list containing: birds - counts bird seen per route per routes - data route run per year species - species list North America","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample BBS data — bbs_data_sample","text":"https://www.sciencebase.gov/ via fetch_bbs_data()","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample BBS data — bbs_data_sample","text":"sample dataset containing data Pacific Wrens 2022 state-level BBS data. full count set obtained via function fetch_bbs_data(). data obtained United States Geological Survey subject change new data added year. See References citation.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_data_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample BBS data — bbs_data_sample","text":"Ziolkowski Jr., D.J., Lutmerding, M., Aponte, V.., Hudson, M-.R., 2022, North American Breeding Bird Survey Dataset 1966 - 2021: U.S. Geological Survey data release, https://doi.org/10.5066/P97WAZE5","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan models included in bbsBayes2 — bbs_models","title":"Stan models included in bbsBayes2 — bbs_models","text":"models included bbsBayes2. model files can found folder identified system.file(\"models\", package = \"bbsBayes2\"). create custom Stan model, see copy_model_file() model_file argument prepare_model(). See also models article details.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan models included in bbsBayes2 — bbs_models","text":"","code":"bbs_models"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_models.html","id":"bbs-models","dir":"Reference","previous_headings":"","what":"bbs_models","title":"Stan models included in bbsBayes2 — bbs_models","text":"data frame 9 rows 3 columns: model - Model type first_diff - First difference models gam - General Additive Models (GAM) gamye - General Additive Models (GAM) Year Effect slope - Slope models variant - Variant model run nonhier - Non-hierarchical models (available first difference models) hier - Hierarchical models spatial - Spatial models file - Stan model file name","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan models included in bbsBayes2 — bbs_models","text":"","code":"bbs_models #> # A tibble: 9 × 3 #>   model      variant file                           #>   <chr>      <chr>   <chr>                          #> 1 first_diff nonhier first_diff_nonhier_bbs_CV.stan #> 2 first_diff hier    first_diff_hier_bbs_CV.stan    #> 3 first_diff spatial first_diff_spatial_bbs_CV.stan #> 4 gam        hier    gam_hier_bbs_CV.stan           #> 5 gam        spatial gam_spatial_bbs_CV.stan        #> 6 gamye      hier    gamye_hier_bbs_CV.stan         #> 7 gamye      spatial gamye_spatial_bbs_CV.stan      #> 8 slope      hier    slope_hier_bbs_CV.stan         #> 9 slope      spatial slope_spatial_bbs_CV.stan"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"List of included strata — bbs_strata","title":"List of included strata — bbs_strata","text":"List strata included bbsBayes2. list item contains data frame describing strata stratification (name, area, country, etc.)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of included strata — bbs_strata","text":"","code":"bbs_strata"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_strata.html","id":"bbs-strata","dir":"Reference","previous_headings":"","what":"bbs_strata","title":"List of included strata — bbs_strata","text":"list 5 data frames Contains bbs_usgs, bbs_cws, bcr, latlong prov_state","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/bbs_strata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of included strata — bbs_strata","text":"","code":"bbs_strata[[\"bbs_cws\"]] #> # A tibble: 207 × 7 #>    strata_name area_sq_km country country_code prov_state   bcr bcr_by_country #>  * <chr>            <dbl> <chr>   <chr>        <chr>      <dbl> <chr>          #>  1 CA-AB-10        52565. Canada  CA           AB            10 Canada-BCR_10  #>  2 CA-AB-11       149352. Canada  CA           AB            11 Canada-BCR_11  #>  3 CA-AB-6        445135. Canada  CA           AB             6 Canada-BCR_6   #>  4 CA-AB-8          6987. Canada  CA           AB             8 Canada-BCR_8   #>  5 CA-BC-10       383006. Canada  CA           BC            10 Canada-BCR_10  #>  6 CA-BC-4        193180. Canada  CA           BC             4 Canada-BCR_4   #>  7 CA-BC-5        199820. Canada  CA           BC             5 Canada-BCR_5   #>  8 CA-BC-6        106917. Canada  CA           BC             6 Canada-BCR_6   #>  9 CA-BC-9         59939. Canada  CA           BC             9 Canada-BCR_9   #> 10 CA-BCR7-7     1743744. Canada  CA           BCR7           7 Canada-BCR_7   #> # ℹ 197 more rows bbs_strata[[\"latlon\"]] #> NULL"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/common_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Common arguments and documentation for various functions — common_docs","title":"Common arguments and documentation for various functions — common_docs","text":"Common arguments documentation various functions","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/common_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common arguments and documentation for various functions — common_docs","text":"level Character. type BBS counts use, \"state\" \"stop\". Default \"state\". release Numeric. yearly release use, 2022 (including data 2021 field season) 2020 (including data 2019). Default 2022. sf Spatial data frame. PLACEHOLDER model Character. Type model use, must one \"first_diff\" (First Differences), \"gam\" (General Additive Model), \"gamye\" (General Additive Model Year Effect), \"slope\" (Slope model). model_variant Character. Model variant use, must one \"nonhier\" (Non-hierarchical), \"hier\" (Hierarchical; default), \"spatial\" (Spatially explicit). min_year Numeric. Minimum year use. Default (NULL) uses first year data. max_year Numeric. Maximum year use. Default (NULL) uses first year data. strata_data List. Stratified data generated stratify() prepared_data List. Prepared data generated prepare_data(). spatial_data List. Spatial neighbourhoods generated prepare_spatial(). model_data List. Model data generated prepare_model(). model_output List. Model output generated run_model(). indices List. Indices generated generate_indices(). trends List. Trends generated generate_trends(). ci_width Numeric. Quantile defining width plotted credible interval. Defaults 0.95 (lower = 0.025 upper = 0.975). Note quantiles need precalculated generate_indices(). add_observed_means Logical. Whether include points indicating observed mean counts. Default FALSE. Note: scale observed means annual indices may match due imbalanced sampling among routes. col_viridis Logical. colour-blind-friendly \"viridis\" palette used. Default FALSE. variables Character vector. Specific variables (e.g., \"strata_raw[1]\") variable types (e.g., \"strata_raw\") calculate metrics. NULL (default) variables returned. set_seed Numeric. NULL (default) seed set. Otherwise integer number used withr::with_seed() internally ensure reproducibility. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/common_docs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Common arguments and documentation for various functions — common_docs","text":"Use @inheritParams common_docs include function documentation matching argument (include matching args)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/common_docs.html","id":"naturecounts-account","dir":"Reference","previous_headings":"","what":"NatureCounts account","title":"Common arguments and documentation for various functions — common_docs","text":"public data available username/password (sign free NatureCounts account). However, access private/semi-public projects/collections must request access. See Access request_ids section information.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/copy_model_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy model file — copy_model_file","title":"Copy model file — copy_model_file","text":"Save predefined Stan model file local text file editing. files can used prepare_model() specifying model_file argument.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/copy_model_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy model file — copy_model_file","text":"","code":"copy_model_file(model, model_variant, dir, overwrite = FALSE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/copy_model_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy model file — copy_model_file","text":"model Character. Type model use, must one \"first_diff\" (First Differences), \"gam\" (General Additive Model), \"gamye\" (General Additive Model Year Effect), \"slope\" (Slope model). model_variant Character. Model variant use, must one \"nonhier\" (Non-hierarchical), \"hier\" (Hierarchical; default), \"spatial\" (Spatially explicit). dir Character. Directory file saved. overwrite Logical. Whether overwrite existing copy model file.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/copy_model_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy model file — copy_model_file","text":"File path copy new model file.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/copy_model_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy model file — copy_model_file","text":"","code":"# Save the Slope model in temp directory copy_model_file(model = \"slope\", model_variant = \"spatial\", dir = tempdir()) #> Copying model file slope_spatial_bbs_CV.stan to /tmp/RtmpACO4K8/slope_spatial_bbs_CV_COPY.stan #> [1] \"/tmp/RtmpACO4K8/slope_spatial_bbs_CV_COPY.stan\"  # Overwrite an existing copy copy_model_file(model = \"slope\", model_variant = \"spatial\", dir = tempdir(),                 overwrite = TRUE) #> Copying model file slope_spatial_bbs_CV.stan to /tmp/RtmpACO4K8/slope_spatial_bbs_CV_COPY.stan #> [1] \"/tmp/RtmpACO4K8/slope_spatial_bbs_CV_COPY.stan\"  # Clean up unlink(file.path(tempdir(), \"slope_spatial_bbs_CV_COPY.stan\"))"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/fetch_bbs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","title":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","text":"Fetch download Breeding Bird Survey data United States Geological Survey (USGS) FTP site. raw data uploaded site analyses performed. Users can download different types (state, stop) different releases (currently 2020 2022).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/fetch_bbs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","text":"","code":"fetch_bbs_data(   level = \"state\",   release = 2022,   force = FALSE,   quiet = FALSE,   compression = \"none\" )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/fetch_bbs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","text":"level Character. type BBS counts use, \"state\" \"stop\". Default \"state\". release Numeric. yearly release use, 2022 (including data 2021 field season) 2020 (including data 2019). Default 2022. force Logical. pre-exising BBS data overwritten? Default FALSE. quiet Logical. Suppress progress messages? Default FALSE. compression Character. compression used save data? Default none takes space fastest load. Must one none, gz, bz2, xz (passed readr::write_rds()'s compress argument).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/fetch_bbs_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","text":"Users asked saving BBS data package-specific directory created computer. downloading data, users must thoroughly read USGS terms conditions data enter word \"yes\" agree. BBS state level counts provide counts beginning 1966, aggregated five bins, contains cumulative counts 10 50 stops along route. contrast BBS stop level counts provides stop-level data beginning 1997, includes counts stop along routes individually. Note stop-level data currently supported modelling utilities bbsBayes2. two releases type data, 2020 2022. default functions use recent release unless otherwise specified. example, release argument stratify() can changed 2020 use 2020 release state-level counts.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/fetch_bbs_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Breeding Bird Survey dataset — fetch_bbs_data","text":"","code":"if (FALSE) { # interactive()  fetch_bbs_data(force = TRUE) fetch_bbs_data(level = \"stop\", force = TRUE) fetch_bbs_data(release = 2020, force = TRUE) fetch_bbs_data(release = 2020, level = \"stop\", force = TRUE) }"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional annual indices of abundance — generate_indices","title":"Regional annual indices of abundance — generate_indices","text":"Calculate annual indices relative abundance year different regions. indices can used plot population trajectories species, estimate trends.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional annual indices of abundance — generate_indices","text":"","code":"generate_indices(   model_output = NULL,   quantiles = c(0.025, 0.05, 0.25, 0.75, 0.95, 0.975),   regions = c(\"continent\", \"stratum\"),   regions_index = NULL,   alternate_n = \"n\",   start_year = NULL,   drop_exclude = FALSE,   max_backcast = NULL,   quiet = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regional annual indices of abundance — generate_indices","text":"model_output List. Model output generated run_model(). quantiles Numeric. Vector quantiles sampled posterior distribution. Default c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975). Note quantiles used create confidence interval bands plot_indices() quantiles generate_trends(), make sure specify ones want use later. regions Character. region(s) summarize calculate indices . Default \"continent\" \"stratum\". Options also include \"country\", \"prov_state\", \"bcr\", \"bcr_by_country\". Note regions apply specific stratifications. can also supply custom region exists column regions_index data frame (see examples details). regions_index Data frame. Custom regions summarize. Data frame must include strata original data one column (strata_name), custom regions defined categories columns. See examples details. alternate_n Character. Indicating name alternative annual index parameter model, Default \"n\" models represents index estimated annual relative abundance, scaled expected mean count averaged across BBS routes observers given stratum year. models included bbsBayes2, alternatives exist provide partial decomposition time-series. \"gamye\" models, parameter \"n_smooth\" represents smooth-version annual index relative abundance (.e., component annual index estimated spline-based smooth GAM). \"n_smooth\" identical \"n\" values model, excludes annual fluctuations. \"gamye\" models, \"n_smooth\" parameter likely natural parameter use estimating trends. similar option exists \"slope\" models, parameter \"n_slope\" represents component population trajectory estimated log-linear regression slope parameters model. Users particularly cautious interpreting \"n_slope\" values relatively long time-series. continuous regression slope, assumes interpreting estimate population trajectory using generate trend estimates assumes single continuous rate population change across entire time-series. Biologically, may reasonable 10-20 year periods, less reasonable longer time-periods. start_year Numeric. Trim data record calculating annual indices. drop_exclude Logical. Whether strata exceed max_backcast threshold excluded calculations. Default FALSE (regions flagged listed dropped). max_backcast Numeric. number years back cast stratum-level estimates first year species observed route stratum. Default NULL, generates annual indices entire time series ignores back-casting. CWS national estimates use back cast 5. Note unless drop_exclude = TRUE, problematic years flagged, omitted. See Details specifics. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regional annual indices of abundance — generate_indices","text":"list containing indices - data frame calculated regional annual indices abundances samples - array posterior draws model meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts indices contains following columns: year - Year particular index region - Region name region_type - Type region strata_included - Strata potentially included annual index calculations strata_excluded - Strata potentially excluded annual index calculations observations species first part time series, see arguments max_backcast start_year index - Strata-weighted count index (median) index_q_XXX - Strata-weighted count index (different quantiles) obs_mean - Mean observed annual counts birds across routes years. alternative estimate average relative abundance species region year. Differences annual indices function model. composite regions (.e., anything stratum-level estimates) average count calculated area-weighted average across strata included n_routes - Number BBS routes contributed data species, region, year n_routes_total - Number BBS routes contributed data species region years selected time-series, .e., years since start_year n_non_zero - Number BBS routes species observed (.e., count > 0) region year backcast_flag - Approximate annual average proportion covered species range free extrapolated population trajectories. e.g., 1.0, data cover full time-series; 0.75, data cover 75 percent time-series. calculated max_backcast != NULL.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regional annual indices of abundance — generate_indices","text":"max_backcast way deal fact species interest may appear data several years start record. max_backcast specifies many years can occur stratum flagged. max_backcast 5 flag stratum without non-zero (non-NA) observation within first 5 years data record. Note records flagged unless drop_exclude = TRUE. find early data record sparse results exclusion many strata, consider trimming early years specifying start_year.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regional annual indices of abundance — generate_indices","text":"","code":"# Using the example model for Pacific Wrens  # Generate the continental and stratum indices i <- generate_indices(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Generate only country indices i_nat <- generate_indices(pacific_wren_model, regions = \"country\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Use a custom region specification (dummy example) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union ri <- bbs_strata[[\"bbs_cws\"]] ri <- mutate(ri, my_region = if_else(prov_state %in% \"ON\",                                      \"Ontario\", \"Rest\"))  # Generate indices with these custom regions i_custom <- generate_indices(   pacific_wren_model,   regions = c(\"country\", \"prov_state\", \"my_region\"),   regions_index = ri) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate regional trends — generate_trends","title":"Generate regional trends — generate_trends","text":"Generates trends continent strata optionally countries, states/provinces, BCRs analyses run stratifications support composite regions. Calculates geometric mean annual changes population size composite regions.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate regional trends — generate_trends","text":"","code":"generate_trends(   indices,   min_year = NULL,   max_year = NULL,   quantiles = c(0.025, 0.05, 0.25, 0.75, 0.95, 0.975),   slope = FALSE,   prob_decrease = NULL,   prob_increase = NULL )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate regional trends — generate_trends","text":"indices List. Indices generated generate_indices(). min_year Numeric. Minimum year use. Default (NULL) uses first year data. max_year Numeric. Maximum year use. Default (NULL) uses first year data. quantiles Numeric vector. Quantiles sampled posterior distribution. Defaults c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975). slope Logical. Whether calculate alternative trend metric, slope log-linear regression annual indices. Default FALSE, estimates trend geometric mean annual rate change min_year max_year. end-point definition trend directly incorporates information two years, therefore closely tracks annual population fluctuations particular years. Conceptually, metric trend tracks difference two years. TRUE, trend represents slope linear regression log-transformed annual indices abundance years min_year max_year. definition trend less sensitive particular annual fluctuations given min_year max_year. Either metric may less appropriate given user's desired inference. appropriate choice metric may also depend model alternate_n choice made generate_indices. example fitted model one \"gamye\" alternatives, alternate_n = \"nsmooth\", default slope = FALSE option represent end-point difference smooth component, already excludes annual fluctuations similar inferential properties slope = TRUE option \"first_diff\" model. prob_decrease Numeric vector. Percent-decrease values optionally calculate posterior probabilities (see Details). Default NULL (calculated). Can range 0 100. prob_increase Numeric vector. Percent-increase values optionally calculate posterior probabilities (see Details). Default NULL (calculated). Can range 0 Inf.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate regional trends — generate_trends","text":"list containing trends - data frame calculated population trends, one row region input indices meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts trends contains following columns: start_year - First year trend end_year - Last year trend region - Region name region_type - Type region strata_included - Strata potentially included annual index calculations strata_excluded - Strata potentially excluded annual index calculations observations species first part time series, see arguments max_backcast start_year trend - Estimated median annual percent change trend time-period according end point comparison annual indices start_year end_year trend_q_XXX - Trend estimates different quantiles percent_change - Median overall estimate percent change trend time-period percent_change_q_XXX - Percent change different quantiles slope_trend - Estimated median annual percent change trend time-period, according slope linear regression log-transformed annual indices. (slope = TRUE) slope_trend_q_XXX - Slope-based trend estimates different quantiles. (slope = TRUE) width_of_95_percent_credible_interval - Width (percent/year) credible interval trend calculation. Calculated widest credible interval requested via quantiles. Default 95 percent CI (.e., trend_q_0.975 - trend_q_0.025) width_of_95_percent_credible_interval_slope - Width (percent/year) credible interval slope-based trend calculation. Calculated widest credible interval requested via quantiles. Default 95 percent CI (.e., slope_trend_q_0.975 - slope_trend_q_0.025). (slope = TRUE) prob_decrease_XX_percent - Proportion posterior distribution percent_change percentage values prob_decrease (non-Null) prob_increase_XX_percent - Proportion posterior distribution percent_change tthe percentage values prob_increase (non-Null) rel_abundance - Mean annual index value across years. estimate average relative abundance species region. Can interpreted predicted average count species average year average route average observer, years, routes, observers existing data obs_rel_abundance - Mean observed annual count birds across routes years. alternative estimate average relative abundance species region. composite regions (.e., anything stratum-level estimates) average count calculated area-weighted average across strata included. n_routes - Number BBS routes contributed data species region years selected time-series, .e., years since start_year mean_n_routes - Mean number BBS routes contributed data species, region, year n_strata_included - number strata included region backcast_flag - Approximate annual average proportion covered species range free extrapolated population trajectories. e.g., 1.0, data cover full time-series; 0.75, data cover 75 percent time-series. calculated max_backcast != NULL.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate regional trends — generate_trends","text":"posterior probabilities can calculated percent-decrease (prob_decrease) /percent-increase (prob_increase) desired. calculate probability population decreased/increased least amount specified. example, prob_increase = 100 result calculation probability population increased 100% (.e., doubled) period trend. Alternatively, prob_decrease = 50 result calculation probability population decreased 50% (.e., less half population remains) period trend.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/generate_trends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate regional trends — generate_trends","text":"","code":"# Using the example model for Pacific Wrens...  # Generate the continental and stratum indices i <- generate_indices(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Now, generate the trends t <- generate_trends(i) #> Error in eval(expr, envir, enclos): object 'i' not found  # Use the slope method t <- generate_trends(i, slope = TRUE) #> Error in eval(expr, envir, enclos): object 'i' not found  # Calculate probability of the population declining by 50% t <- generate_trends(i, prob_decrease = 50) #> Error in eval(expr, envir, enclos): object 'i' not found"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_convergence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convergence metrics — get_convergence","title":"Convergence metrics — get_convergence","text":"Calculate convergence metrics model run. Specifically calculates bulk tail effective sample sizes (ess_bulk, ess_tail) R-hat (rhat). Returns output similar get_summary().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_convergence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convergence metrics — get_convergence","text":"","code":"get_convergence(model_output, variables = NULL)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_convergence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convergence metrics — get_convergence","text":"model_output List. Model output generated run_model(). variables Character vector. Specific variables (e.g., \"strata_raw[1]\") variable types (e.g., \"strata_raw\") calculate metrics. NULL (default) variables returned.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_convergence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convergence metrics — get_convergence","text":"Data frame convergence metrics model variables. Contains variable_type, variable, ess_bulk, ess_tail, rhat.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_convergence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convergence metrics — get_convergence","text":"","code":"# Temporarily suppress convergence warning for legibility # \"The ESS has been capped to avoid unstable estimates.\" opts <- options(warn = -1)  # Using the example model for Pacific Wrens  get_convergence(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\" get_convergence(pacific_wren_model, variables = \"strata_raw\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\" get_convergence(pacific_wren_model, variables = \"strata_raw[9]\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Restore warnings options(opts)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_model_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model variables — get_model_vars","title":"Get model variables — get_model_vars","text":"Returns basic model variables /variable types (note variables different iterations strata year).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_model_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model variables — get_model_vars","text":"","code":"get_model_vars(model_output, all = FALSE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_model_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model variables — get_model_vars","text":"model_output List. Model output generated run_model(). Logical. Whether return , specific variables (e.g., strata_raw[1] just variable types (e.g., strata_raw). Defaults FALSE (variable types ).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_model_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model variables — get_model_vars","text":"character vector model variable types.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_model_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get model variables — get_model_vars","text":"","code":"# Using the example model for Pacific Wrens...  # List variable types get_model_vars(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # List all variables get_model_vars(pacific_wren_model, all = TRUE) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the cmdstanr summary — get_summary","title":"Return the cmdstanr summary — get_summary","text":"Extract return model summary using cmdstanr::summary().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the cmdstanr summary — get_summary","text":"","code":"get_summary(model_output, variables = NULL)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the cmdstanr summary — get_summary","text":"model_output List. Model output generated run_model(). variables Character vector. Specific variables (e.g., \"strata_raw[1]\") variable types (e.g., \"strata_raw\") calculate metrics. NULL (default) variables returned.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the cmdstanr summary — get_summary","text":"data frame model summary statistics.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/get_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the cmdstanr summary — get_summary","text":"","code":"# Temporarily suppress convergence warning for legibility # \"The ESS has been capped to avoid unstable estimates.\" opts <- options(warn = -1)  # Using the example model for Pacific Wrens  get_summary(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\" get_summary(pacific_wren_model, variables = \"strata_raw\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\" get_summary(pacific_wren_model, variables = \"strata_raw[9]\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Restore warnings options(opts)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_bbs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether BBS data exists locally — have_bbs_data","title":"Check whether BBS data exists locally — have_bbs_data","text":"Use function check BBS data downloaded bbsBayes2 expecting find . returns FALSE, data present; use fetch_bbs_data() retrieve .","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_bbs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether BBS data exists locally — have_bbs_data","text":"","code":"have_bbs_data(level = \"state\", release = 2022, quiet = FALSE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_bbs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether BBS data exists locally — have_bbs_data","text":"level Character. BBS data check, one \"\", \"state\", \"stop\". Default \"state\". release Character/Numeric. BBS data check, one \"\", 2020, 2022. Default 2022. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_bbs_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether BBS data exists locally — have_bbs_data","text":"TRUE data found, FALSE otherwise","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_bbs_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether BBS data exists locally — have_bbs_data","text":"","code":"have_bbs_data() #> Expected BBS state data 2022: '/home/runner/.local/share/R/bbsBayes2/bbs_state_data_2022.rds' #> [1] TRUE have_bbs_data(release = 2020) #> Expected BBS state data 2020: '/home/runner/.local/share/R/bbsBayes2/bbs_state_data_2020.rds' #> [1] FALSE have_bbs_data(release = \"all\", level = \"all\") #> Expected BBS state data 2020: '/home/runner/.local/share/R/bbsBayes2/bbs_state_data_2020.rds' #> Expected BBS stop data 2022: '/home/runner/.local/share/R/bbsBayes2/bbs_stop_data_2020.rds' #> Expected BBS state data 2020: '/home/runner/.local/share/R/bbsBayes2/bbs_state_data_2022.rds' #> Expected BBS stop data 2022: '/home/runner/.local/share/R/bbsBayes2/bbs_stop_data_2022.rds' #> [1] FALSE FALSE  TRUE FALSE"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_cmdstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if cmdstan is installed — have_cmdstan","title":"Check if cmdstan is installed — have_cmdstan","text":"Wrapper around cmdstanr::cmdstan_version(error_on_NA = FALSE) quick check.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_cmdstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if cmdstan is installed — have_cmdstan","text":"","code":"have_cmdstan()"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/have_cmdstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if cmdstan is installed — have_cmdstan","text":"Used internally skipping examples tests cmdstan installed.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_bbs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Breeding Bird Survey data — load_bbs_data","title":"Load Breeding Bird Survey data — load_bbs_data","text":"Load local, minimally processed, raw, unstratified data. data must previously fetched using fetch_bbs_data(). function provided custom explorations part analysis workflow; stratify() loading .","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_bbs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Breeding Bird Survey data — load_bbs_data","text":"","code":"load_bbs_data(level = \"state\", release = 2022, sample = FALSE, quiet = TRUE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_bbs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Breeding Bird Survey data — load_bbs_data","text":"level Character. type BBS counts use, \"state\" \"stop\". Default \"state\". release Numeric. yearly release use, 2022 (including data 2021 field season) 2020 (including data 2019). Default 2022. sample Logical. Whether use sample data Pacific Wrens (see ?bbs_data_sample). Default FALSE. TRUE, level release ignored. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_bbs_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Breeding Bird Survey data — load_bbs_data","text":"Large list (3 elements) consisting : birds Data frame sample bird point count data per route, per year routes Data frame sample yearly route data species Sample list North American bird species","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a geographic strata map — load_map","title":"Load a geographic strata map — load_map","text":"Load one included spatial data files (maps) simple features object (sf package)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a geographic strata map — load_map","text":"","code":"load_map(stratify_by = NULL, type = \"strata\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a geographic strata map — load_map","text":"stratify_by Character. Stratification type. One \"prov_state\", \"bcr\", \"latlong\", \"bbs_cws\", \"bbs_usgs\". type Character. \"strata\" political map (\"North America\", \"Canada\" \"US\"/\"USA\"/\"United States America\").","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a geographic strata map — load_map","text":"sf polygon object","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/load_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a geographic strata map — load_map","text":"","code":"# Toy example with Pacific Wren sample data # First, stratify the sample data strat_map <- load_map(stratify_by = \"bbs_cws\")  # simple plot of the map plot(strat_map)   # or use ggplot2 library(ggplot2) ggplot(data = strat_map) +   geom_sf(aes(fill = strata_name), show.legend = FALSE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pacific_wren_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Example model output — pacific_wren_model","title":"Example model output — pacific_wren_model","text":"Example model output running hierarchical first difference model included sample data Pacific Wrens.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pacific_wren_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example model output — pacific_wren_model","text":"","code":"pacific_wren_model"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pacific_wren_model.html","id":"pacific-wren-model","dir":"Reference","previous_headings":"","what":"pacific_wren_model","title":"Example model output — pacific_wren_model","text":"list output run_model() 4 items model_fit - cmdstanr model output model_data - list data formatted use Stan modelling meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pacific_wren_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example model output — pacific_wren_model","text":"","code":"# Code to replicate: if (FALSE) { pacific_wren_model <- stratify(by = \"bbs_cws\", sample_data = TRUE) %>%   prepare_data() %>%   prepare_model(model = \"first_diff\", set_seed = 111) %>%   run_model(chains = 2, iter_sampling = 20, iter_warmup = 20, set_seed = 111) }"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_geofacet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create geofacet plot of population trajectories by province/state — plot_geofacet","title":"Create geofacet plot of population trajectories by province/state — plot_geofacet","text":"Generate faceted plot population trajectories province/state. possible indices created generate_indices() include prov_state region. geofacet plots one facet per state/province, multiple strata per facet, can plotted separate trajectories within facet (multiple = TRUE).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_geofacet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create geofacet plot of population trajectories by province/state — plot_geofacet","text":"","code":"plot_geofacet(   indices,   ci_width = 0.95,   multiple = FALSE,   trends = NULL,   slope = FALSE,   add_observed_means = FALSE,   col_viridis = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_geofacet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create geofacet plot of population trajectories by province/state — plot_geofacet","text":"indices List. Indices generated generate_indices(). ci_width Numeric. Quantile defining width plotted credible interval. Defaults 0.95 (lower = 0.025 upper = 0.975). Note quantiles need precalculated generate_indices(). multiple Logical. Whether plot multiple strata-level trajectories within prov/state facet. Default FALSE. trends List. (Optional) Output generated generate_trends(). included trajectories coloured based colour scale used plot_map. slope Logical. trends included, whether colours plot based slope trends. Default FALSE. add_observed_means Logical. Whether include points indicating observed mean counts. Default FALSE. Note: scale observed means annual indices may match due imbalanced sampling among routes. col_viridis Logical. colour-blind-friendly \"viridis\" palette used. Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_geofacet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create geofacet plot of population trajectories by province/state — plot_geofacet","text":"ggplot object","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_geofacet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create geofacet plot of population trajectories by province/state — plot_geofacet","text":"","code":"# Using the example model for Pacific Wrens...  # Generate indices i <- generate_indices(pacific_wren_model,                       regions = c(\"stratum\", \"prov_state\")) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\" # Generate trends t <- generate_trends(i) #> Error in eval(expr, envir, enclos): object 'i' not found  # Now make the geofacet plot. plot_geofacet(i, trends = t, multiple = TRUE) #> Error in eval(expr, envir, enclos): object 'i' not found plot_geofacet(i, trends = t, multiple = TRUE, col_viridis = TRUE) #> Error in eval(expr, envir, enclos): object 'i' not found plot_geofacet(i, multiple = TRUE) #> Error in eval(expr, envir, enclos): object 'i' not found plot_geofacet(i, trends = t, multiple = FALSE) #> Error in eval(expr, envir, enclos): object 'i' not found plot_geofacet(i, multiple = FALSE) #> Error in eval(expr, envir, enclos): object 'i' not found  # With different ci_width, specify desired quantiles in indices i <- generate_indices(pacific_wren_model,                       regions = c(\"stratum\", \"prov_state\"),                       quantiles = c(0.005, 0.995)) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  plot_geofacet(i, multiple = FALSE, ci_width = 0.99) #> Error in eval(expr, envir, enclos): object 'i' not found"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate plots of index trajectories by stratum — plot_indices","title":"Generate plots of index trajectories by stratum — plot_indices","text":"Generates indices plot stratum modelled.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate plots of index trajectories by stratum — plot_indices","text":"","code":"plot_indices(   indices = NULL,   ci_width = 0.95,   min_year = NULL,   max_year = NULL,   title = TRUE,   title_size = 20,   axis_title_size = 18,   axis_text_size = 16,   line_width = 1,   add_observed_means = FALSE,   add_number_routes = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate plots of index trajectories by stratum — plot_indices","text":"indices List. Indices generated generate_indices(). ci_width Numeric. Quantile defining width plotted credible interval. Defaults 0.95 (lower = 0.025 upper = 0.975). Note quantiles need precalculated generate_indices(). min_year Numeric. Minimum year plot. max_year Numeric. Maximum year plot. title Logical. Whether include title plot. title_size Numeric. Font size plot title. Defaults 20 axis_title_size Numeric. Font size axis titles. Defaults 18 axis_text_size Numeric. Font size axis text. Defaults 16 line_width Numeric. Size trajectory line. Defaults 1 add_observed_means Logical. Whether include points indicating observed mean counts. Default FALSE. Note: scale observed means annual indices may match due imbalanced sampling among routes. add_number_routes Logical. Whether superimpose dotplot showing number BBS routes included year. useful visual check relative data-density time cases number observations increases time.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate plots of index trajectories by stratum — plot_indices","text":"List ggplot2 plots, item plot stratum's indices.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate plots of index trajectories by stratum — plot_indices","text":"","code":"# Using the example model for Pacific Wrens...  # Generate country, continent, and stratum indices i <- generate_indices(model_output = pacific_wren_model,                       regions = c(\"country\", \"continent\", \"stratum\")) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Now, plot_indices() will generate a list of plots for all regions plots <- plot_indices(i) #> Error in eval(expr, envir, enclos): object 'i' not found  # To view any plot, use [[i]] plots[[1]] #> Error in eval(expr, envir, enclos): object 'plots' not found  names(plots) #> Error in eval(expr, envir, enclos): object 'plots' not found  # Suppose we wanted to access the continental plot. We could do so with plots[[\"continent\"]] #> Error in eval(expr, envir, enclos): object 'plots' not found  # You can specify to only plot a subset of years using min_year and max_year  # Plots indices from 2015 onward p_2015_min <- plot_indices(i, min_year = 2015) #> Error in eval(expr, envir, enclos): object 'i' not found p_2015_min[[\"continent\"]] #> Error in eval(expr, envir, enclos): object 'p_2015_min' not found  #Plot up indices up to the year 2017 p_2017_max <- plot_indices(i, max_year = 2017) #> Error in eval(expr, envir, enclos): object 'i' not found p_2017_max[[\"continent\"]] #> Error in eval(expr, envir, enclos): object 'p_2017_max' not found  #Plot indices between 2011 and 2016 p_2011_2016 <- plot_indices(i, min_year = 2011, max_year = 2016) #> Error in eval(expr, envir, enclos): object 'i' not found p_2011_2016[[\"continent\"]] #> Error in eval(expr, envir, enclos): object 'p_2011_2016' not found"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a map of trends by strata — plot_map","title":"Generate a map of trends by strata — plot_map","text":"plot_map() allows generate colour-coded map percent change species trends strata.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a map of trends by strata — plot_map","text":"","code":"plot_map(   trends,   slope = FALSE,   title = TRUE,   col_viridis = FALSE,   strata_custom = NULL )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a map of trends by strata — plot_map","text":"trends List. Trends generated generate_trends(). slope Logical. Whether map values alternative trend metric (slope log-linear regression) slope = TRUE used generate_trends(),  annual indices. Default FALSE. title Logical. Whether include title species. Default TRUE. col_viridis Logical. colour-blind-friendly \"viridis\" palette used. Default FALSE. strata_custom (sf) Data Frame. Data frame modified existing stratification, sf spatial data frame polygons defining custom stratifications. See details strata_custom stratify().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a map of trends by strata — plot_map","text":"ggplot2 plot","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/plot_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a map of trends by strata — plot_map","text":"","code":"# Using the example model for Pacific Wrens...  # Generate the continental and stratum indices i <- generate_indices(pacific_wren_model) #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Now generate trends t <- generate_trends(i, slope = TRUE) #> Error in eval(expr, envir, enclos): object 'i' not found  # Generate the map (without slope trends) plot_map(t) #> Error: `trends` must a list created by `generate_trends()` containing #> `meta_data`, `meta_strata`, `trends`, `raw_data`  # Generate the map (with slope trends) plot_map(t, slope = TRUE) #> Error: `trends` must a list created by `generate_trends()` containing #> `meta_data`, `meta_strata`, `trends`, `raw_data`  # Viridis plot_map(t, col_viridis = TRUE) #> Error: `trends` must a list created by `generate_trends()` containing #> `meta_data`, `meta_strata`, `trends`, `raw_data`"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter for data quality — prepare_data","title":"Filter for data quality — prepare_data","text":"Check filter stratified data minimum required samples modelling, prepare data format use models.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter for data quality — prepare_data","text":"","code":"prepare_data(   strata_data,   min_year = NULL,   max_year = NULL,   min_n_routes = 3,   min_max_route_years = 3,   min_mean_route_years = 1,   quiet = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter for data quality — prepare_data","text":"strata_data List. Stratified data generated stratify() min_year Numeric. Minimum year use. Default (NULL) uses first year data. max_year Numeric. Maximum year use. Default (NULL) uses first year data. min_n_routes Numeric. Required minimum routes per strata species observed. Default 3. min_max_route_years Numeric. Required minimum number years non-zero observations species least 1 route. Default 3. retain strata least one route species observed least many years. min_mean_route_years Numeric. Required minimum average years per route species observed. Default 1. retain strata average number years species observed per route greater value. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter for data quality — prepare_data","text":"List prepared (meta) data used modelling steps. model_data - list data formatted use Stan modelling meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts used create model_data (just formatted nicely)","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter for data quality — prepare_data","text":"","code":"# Toy example with Pacific Wren sample data  # First, stratify the sample data  s <- stratify(by = \"bbs_cws\", sample_data = TRUE) #> Using 'bbs_cws' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes...  # Prepare the stratified data for use in a model. In this #   toy example, we will set the minimum year as 2009 and #   maximum year as 2018, effectively only setting up to #   model 10 years of data.  p <- prepare_data(s, min_year = 2009, max_year = 2018)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare model parameters — prepare_model","title":"Prepare model parameters — prepare_model","text":"Calculate format prepared data use modelling. Different parameters definied different types models (see ?bbs_models list models included bbsBayes2).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare model parameters — prepare_model","text":"","code":"prepare_model(   prepared_data,   model,   model_variant = \"hier\",   model_file = NULL,   use_pois = FALSE,   heavy_tailed = TRUE,   n_knots = NULL,   basis = \"mgcv\",   calculate_nu = FALSE,   calculate_log_lik = FALSE,   calculate_cv = FALSE,   cv_k = 10,   cv_fold_groups = \"obs_n\",   cv_omit_singles = TRUE,   set_seed = NULL,   quiet = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare model parameters — prepare_model","text":"prepared_data List. Prepared data generated prepare_data() (model-variant spatial) prepare_spatial() (model_variant \"spatial\"). model Character. Type model use, must one \"first_diff\" (First Differences), \"gam\" (General Additive Model), \"gamye\" (General Additive Model Year Effect), \"slope\" (Slope model). model_variant Character. Model variant use, must one \"nonhier\" (Non-hierarchical), \"hier\" (Hierarchical; default), \"spatial\" (Spatially explicit). model_file Character. Optional location custom Stan model file use. use_pois Logical. Whether use -Dispersed Poisson model (TRUE) Negative Binomial model (FALSE; default). heavy_tailed Logical. Whether extra-Poisson error distributions modelled t-distribution, heavier tails standard normal distribution. Default TRUE. Recent results suggest best even though requires much longer convergence times. Can set FALSE Poisson models (.e. use_pois = TRUE). n_knots Numeric. Number knots \"gam\" \"gamye\" models basis Character. Basis function use GAM smooth, one \"original\" \"mgcv\". Default \"original\", basis used Smith Edwards 2020. \"mgcv\" alternate uses \"tp\" basis package mgcv (also used brms, rstanarm). using \"mgcv\" option, user may want consider adjusting prior distributions parameters precision. calculate_nu Logical. Whether calculate nu parameter factor gamma(2, 0.1). Default FALSE. calculate_log_lik Logical. Whether calculate point-wise log-likelihood data given model. Default FALSE. calculate_cv Logical. Whether use bbsBayes2' cross validation. Note experimental. See Details. cv_k Numeric. number K folds include (relevant calculate_cv = TRUE). Default 10. Note experimental. cv_fold_groups Character. data column use determining grouping level observations assigned different fold groups. Must one obs_n (default) routes (relevant calculate_cv = TRUE). Note experimental. See models article details. cv_omit_singles Logical. Whether omit test groups replication (relevant calculate_cv = TRUE). Default TRUE. See models article details. set_seed Numeric. NULL (default) seed set. Otherwise integer number used withr::with_seed() internally ensure reproducibility. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare model parameters — prepare_model","text":"list prepared data. model_data - list data formatted use Stan modelling init_values - list initialization parameters folds - vector k-fold groups observation assigned (calculate_cv = TRUE), NULL meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts used create model_data (just formatted nicely)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare model parameters — prepare_model","text":"two ways can customize model run. first supply custom model_file created copy_model_file() function edited hand. Second, can edit overwrite initialization parameters (init_values) output prepare_model() customize init supplied cmdstanr::sample(). can supply parameters anyway cmdstanr::sample() accepts init argument. implement bbsBayes2' version cross validation, set calculate_cv = TRUE. can set system cross validation modifying folds list-item output prepare_model(). Note considered experimental. See models article advanced examples explanations.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare model parameters — prepare_model","text":"","code":"s <- stratify(by = \"bbs_cws\", sample_data = TRUE) #> Using 'bbs_cws' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... p <- prepare_data(s) pm <- prepare_model(p, model = \"first_diff\", model_variant = \"hier\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Define neighbouring strata for spatial analyses — prepare_spatial","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"Given prepared data spatial data frame polygons outlining strata, identify neighbourhood matrix use modelling.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"","code":"prepare_spatial(   prepared_data,   strata_map,   voronoi = FALSE,   nearest_fill = FALSE,   island_link_dist_factor = 1.2,   buffer_type = \"buffer\",   buffer_dist = 10000,   add_map = NULL,   label_size = 3,   quiet = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"prepared_data List. Prepared data generated prepare_data(). strata_map sf Data Frame. sf map strata (MULTI)POLYGONs. Must column \"strata_name\" matching strata output prepare_data(). voronoi Logical. Whether use Voroni method. Default FALSE. nearest_fill Logical. strata neighbours, whether fill centroids 2 nearest neighbours using Voronoi method. Default FALSE. island_link_dist_factor Numeric. Distances within factor amount considered nearest strata neighbours. Used linking otherwise isolated islands strata, using Voronoi method. Default 1.2. buffer_type Character. buffer type use using Voronoi method. Must one buffer (default) convex_hull. See Details specifics. buffer_dist Numeric. Distance buffer link strata connected using Voronoi method. Units sf::st_crs(strata_map). starting distance buffer_type = \"buffer\" final distance buffer_type = \"convex_hull\". Default 10000. See Details. add_map sf object. Spatial data add map output. label_size Numeric. Size labels map. data many different strata can useful reduce size labels. Default 3. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"List prepared (meta) data used modelling steps. spatial_data - list samples, nodes, adjacent matrix map visualizing matrix model_data - list data formatted use Stan modelling meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts used create model_data (just formatted nicely)","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"using Voronoi method, buffer used fill around link strata together. buffer_type buffer, buffer_dist starting distance buffer. strata linked, distance increased 10% applied , repeating strata linked. buffer_type convex_hull, convex hull used link strata applying buffer distance buffer_dist. Note distances units sf::st_crs(strata_map).","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/prepare_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define neighbouring strata for spatial analyses — prepare_spatial","text":"","code":"map <- load_map(\"bbs_cws\") s <- stratify(by = \"bbs_cws\", sample_data = TRUE) #> Using 'bbs_cws' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... p <- prepare_data(s, min_max_route_years = 2) sp <- prepare_spatial(p, map) #> Preparing spatial data... #> Identifying neighbours (non-Voronoi method)... #> Formating neighbourhood matrices... #> Plotting neighbourhood matrices...  # Visually explore the spatial linkages sp$map #> NULL  # Overlay subset strata map on original mapping data sp <- prepare_spatial(p, map, add_map = map) #> Preparing spatial data... #> Identifying neighbours (non-Voronoi method)... #> Formating neighbourhood matrices... #> Plotting neighbourhood matrices... sp$map #> NULL"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/remove_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove bbsBayes2 cache — remove_cache","title":"Remove bbsBayes2 cache — remove_cache","text":"Remove data downloaded via fetch_bbs_data() well model executables created cmdstanr::cmdstan_model() via run_model().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/remove_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove bbsBayes2 cache — remove_cache","text":"","code":"remove_cache(type = \"bbs_data\", level = \"all\", release = \"all\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/remove_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove bbsBayes2 cache — remove_cache","text":"type Character. cached data remove. One \"\", \"bbs_data\", \"models\". \"\", removes entire cache directory (data contained therein). \"bbs_data\", removes BBS data downloaded fetch_bbs_data(). \"models\", removes model executables compiled run_models() run. level Character. BBS data remove, one \"\", \"state\", \"stop\". applies type = \"bbs_data\". Default \"\". release Character/Numeric. BBS data remove, one \"\", 2020, 2022. applies type = \"bbs_data\". Default \"\".","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/remove_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove bbsBayes2 cache — remove_cache","text":"Nothing","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/remove_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove bbsBayes2 cache — remove_cache","text":"","code":"if (FALSE) { # Remove everything remove_cache(type = \"all\")  # Remove all BBS data files (but not the dir) remove_cache(level = \"all\", release = \"all\")  # Remove all 'stop' data remove_cache(level = \"stop\", release = \"all\")  # Remove all 2020 data remove_cache(level = \"all\", release = 2020)  # Remove 2020 stop data remove_cache(level = \"stop\", release = 2020)  # Remove all model executables remove_cache(type = \"model\") }"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Bayesian model — run_model","title":"Run Bayesian model — run_model","text":"Run Bayesian model cmdstandr::sample()using prepare data model parameters specified previous steps.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Bayesian model — run_model","text":"","code":"run_model(   model_data,   refresh = 100,   chains = 4,   parallel_chains = 4,   iter_warmup = 1000,   iter_sampling = 1000,   adapt_delta = 0.95,   max_treedepth = 14,   k = NULL,   output_basename = NULL,   output_dir = \".\",   save_model = TRUE,   overwrite = FALSE,   set_seed = NULL,   quiet = FALSE,   ... )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Bayesian model — run_model","text":"model_data List. Model data generated prepare_model(). refresh Numeric. Passed cmdstanr::sample(). Number iterations screen updates. 0, errors shown. chains Numeric. Passed cmdstanr::sample(). Number Markov chains run. parallel_chains Numeric. Passed cmdstanr::sample(). Maximum number chains run parallel. iter_warmup Numeric. Passed cmdstanr::sample(). Number warmup iterations per chain. iter_sampling Numeric. Passed cmdstanr::sample(). Number sampling (post-warmup) iterations per chain. adapt_delta Numeric. Passed cmdstanr::sample(). adaptation target acceptance statistic. max_treedepth Numeric. Passed cmdstanr::sample(). maximum allowed tree depth NUTS engine. See ?cmdstanr::sample. k Numeric. K-fold group run cross-validation. relevant folds defined prepare_model(calculate_cv = TRUE) custom definition. See ?prepare_model models article details. output_basename Character. Name files created part Stan model run final model output RDS file save_model = TRUE. output_dir Character. Directory model files created. save_model Logical. Whether save model output file RDS object required data. Defaults TRUE. overwrite Logical. Whether overwrite existing model output file saving. set_seed Numeric. NULL (default) seed set. Otherwise integer number used withr::with_seed() internally ensure reproducibility. quiet Logical. Suppress progress messages? Default FALSE. ... arguments passed cmdstanr::sample().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Bayesian model — run_model","text":"List model fit (meta) data. model_fit - cmdstanr model output model_data - list data formatted use Stan modelling meta_data - meta data defining analysis meta_strata - data frame listing strata meta data raw_data - data frame summarized counts","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Bayesian model — run_model","text":"model set prepare_model(). run_model() function final (often long-running) step actually running model. can tweak model run (iterations etc.). See models article advanced examples explanations.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Bayesian model — run_model","text":"","code":"s <- stratify(by = \"bbs_cws\", sample_data = TRUE) #> Using 'bbs_cws' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... p <- prepare_data(s) pm <- prepare_model(p, model = \"first_diff\", model_variant = \"hier\")  # Run model (quick and dirty) m <- run_model(pm, iter_warmup = 20, iter_sampling = 20, chains = 2) #> One set of `init` values supplied, duplicating for each chain. #> Running MCMC with 2 chains, at most 4 in parallel... #>  #> Chain 1 WARNING: There aren't enough warmup iterations to fit the  #> Chain 1          three stages of adaptation as currently configured.  #> Chain 1          Reducing each adaptation stage to 15%/75%/10% of  #> Chain 1          the given number of warmup iterations:  #> Chain 1            init_buffer = 3  #> Chain 1            adapt_window = 15  #> Chain 1            term_buffer = 2  #> Chain 1 Iteration:  1 / 40 [  2%]  (Warmup)  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 2 WARNING: There aren't enough warmup iterations to fit the  #> Chain 2          three stages of adaptation as currently configured.  #> Chain 2          Reducing each adaptation stage to 15%/75%/10% of  #> Chain 2          the given number of warmup iterations:  #> Chain 2            init_buffer = 3  #> Chain 2            adapt_window = 15  #> Chain 2            term_buffer = 2  #> Chain 2 Iteration:  1 / 40 [  2%]  (Warmup)  #> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 2 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 2  #> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 2 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 2  #> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 2 Exception: neg_binomial_2_log_lpmf: Precision parameter is 0, but must be positive finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 2  #> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 2 Exception: neg_binomial_2_log_lpmf: Log location parameter[1] is -nan, but must be finite! (in '/tmp/RtmpACO4K8/model-26ec21615586.stan', line 227, column 3 to column 40) #> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 2  #> Chain 1 Iteration: 21 / 40 [ 52%]  (Sampling)  #> Chain 2 Iteration: 21 / 40 [ 52%]  (Sampling)  #> Chain 1 Iteration: 40 / 40 [100%]  (Sampling)  #> Chain 1 finished in 119.7 seconds. #> Chain 2 Iteration: 40 / 40 [100%]  (Sampling)  #> Chain 2 finished in 127.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 123.6 seconds. #> Total execution time: 127.7 seconds. #>  #> Warning: 1 of 2 chains had an E-BFMI less than 0.2. #> See https://mc-stan.org/misc/warnings for details. #> Saving model output to /home/runner/work/bbsBayes2/bbsBayes2/docs/reference/BBS_STAN_first_diff_hier_2023-07-28.rds  # Clean up (remove model output files) unlink(list.files(pattern = paste0(\"BBS_STAN_first_diff_hier_\", Sys.Date())))"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Save output of run_model() — save_model_run","title":"Save output of run_model() — save_model_run","text":"function closely imitates cmdstanr::save_object() saves entire model output object run_model() contains details regarding data preparation (stratification etc.).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save output of run_model() — save_model_run","text":"","code":"save_model_run(model_output, path = NULL, quiet = FALSE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save output of run_model() — save_model_run","text":"model_output List. Model output generated run_model(). path Character. Optional file path use saved data. Defaults file path used original run. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save output of run_model() — save_model_run","text":"Nothing. Creates .rds file path.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save output of run_model() — save_model_run","text":"Files saved path, provided, original location Stan model run files (original files exist).","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/save_model_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save output of run_model() — save_model_run","text":"","code":"# By default, the model is saved as an RDS file during `run_model()`  # But you can also deliberately save the file (here with an example model) save_model_run(pacific_wren_model, path = \"my_model.rds\") #> Error in assert_valid_draws_format(format): could not find function \"assert_valid_draws_format\"  # Clean up unlink(\"my_model.rds\")"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/search_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for species — search_species","title":"Search for species — search_species","text":"helper function finding appropriate species name use stratify().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/search_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for species — search_species","text":"","code":"search_species(species, combine_species_forms = TRUE)"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/search_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for species — search_species","text":"species Character/Numeric. Search term, either name English French, AOU code, scientific genus species. Matches regular expression ignores case. combine_species_forms Logical. Whether search combined species data uncombined species. Note results different species names.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/search_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for species — search_species","text":"Subset BBS species data frame matching species pattern.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/search_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for species — search_species","text":"","code":"# Search for various terms search_species(\"Paridae\") #> # A tibble: 17 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #>  2  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #>  3  7380 Mountain Chick… Mésan… Poecil… Pass… Parid… Poec… gambeli TRUE          #>  4  7370 Mexican Chicka… Mésan… Poecil… Pass… Parid… Poec… sclate… TRUE          #>  5  7410 Chestnut-backe… Mésan… Poecil… Pass… Parid… Poec… rufesc… TRUE          #>  6  7400 Boreal Chickad… Mésan… Poecil… Pass… Parid… Poec… hudson… TRUE          #>  7  7352 unid. Carolina… unid … Poecil… Pass… Parid… Poec… caroli… TRUE          #>  8  7353 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #>  9  7354 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #> 10  7351 unid. western … unid … Poecil… Pass… Parid… Poec… sp.     TRUE          #> 11  7340 Bridled Titmou… Mésan… Baeolo… Pass… Parid… Baeo… wollwe… TRUE          #> 12  7330 Oak Titmouse    Mésan… Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 13  7331 Juniper Titmou… Mésan… Baeolo… Pass… Parid… Baeo… ridgwa… TRUE          #> 14  7332 unid. Oak Titm… unid … Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 15  7310 Tufted Titmouse Mésan… Baeolo… Pass… Parid… Baeo… bicolor TRUE          #> 16  7320 Black-crested … Mésan… Baeolo… Pass… Parid… Baeo… atricr… TRUE          #> 17  7315 unid. Tufted T… unid … Baeolo… Pass… Parid… Baeo… bicolo… TRUE          search_species(\"chickadee\") #> # A tibble: 10 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #>  2  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #>  3  7380 Mountain Chick… Mésan… Poecil… Pass… Parid… Poec… gambeli TRUE          #>  4  7370 Mexican Chicka… Mésan… Poecil… Pass… Parid… Poec… sclate… TRUE          #>  5  7410 Chestnut-backe… Mésan… Poecil… Pass… Parid… Poec… rufesc… TRUE          #>  6  7400 Boreal Chickad… Mésan… Poecil… Pass… Parid… Poec… hudson… TRUE          #>  7  7352 unid. Carolina… unid … Poecil… Pass… Parid… Poec… caroli… TRUE          #>  8  7353 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #>  9  7354 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #> 10  7351 unid. western … unid … Poecil… Pass… Parid… Poec… sp.     TRUE          search_species(\"mésang\") #> # A tibble: 19 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  4840 Canada Jay      Mésan… Periso… Pass… Corvi… Peri… canade… TRUE          #>  2  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #>  3  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #>  4  7380 Mountain Chick… Mésan… Poecil… Pass… Parid… Poec… gambeli TRUE          #>  5  7370 Mexican Chicka… Mésan… Poecil… Pass… Parid… Poec… sclate… TRUE          #>  6  7410 Chestnut-backe… Mésan… Poecil… Pass… Parid… Poec… rufesc… TRUE          #>  7  7400 Boreal Chickad… Mésan… Poecil… Pass… Parid… Poec… hudson… TRUE          #>  8  7352 unid. Carolina… unid … Poecil… Pass… Parid… Poec… caroli… TRUE          #>  9  7353 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #> 10  7354 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #> 11  7351 unid. western … unid … Poecil… Pass… Parid… Poec… sp.     TRUE          #> 12  7340 Bridled Titmou… Mésan… Baeolo… Pass… Parid… Baeo… wollwe… TRUE          #> 13  7330 Oak Titmouse    Mésan… Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 14  7331 Juniper Titmou… Mésan… Baeolo… Pass… Parid… Baeo… ridgwa… TRUE          #> 15  7332 unid. Oak Titm… unid … Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 16  7310 Tufted Titmouse Mésan… Baeolo… Pass… Parid… Baeo… bicolor TRUE          #> 17  7320 Black-crested … Mésan… Baeolo… Pass… Parid… Baeo… atricr… TRUE          #> 18  7315 unid. Tufted T… unid … Baeolo… Pass… Parid… Baeo… bicolo… TRUE          #> 19  7430 Bushtit         Mésan… Psaltr… Pass… Aegit… Psal… minimus TRUE          search_species(\"Poecile\") #> # A tibble: 10 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #>  2  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #>  3  7380 Mountain Chick… Mésan… Poecil… Pass… Parid… Poec… gambeli TRUE          #>  4  7370 Mexican Chicka… Mésan… Poecil… Pass… Parid… Poec… sclate… TRUE          #>  5  7410 Chestnut-backe… Mésan… Poecil… Pass… Parid… Poec… rufesc… TRUE          #>  6  7400 Boreal Chickad… Mésan… Poecil… Pass… Parid… Poec… hudson… TRUE          #>  7  7352 unid. Carolina… unid … Poecil… Pass… Parid… Poec… caroli… TRUE          #>  8  7353 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #>  9  7354 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #> 10  7351 unid. western … unid … Poecil… Pass… Parid… Poec… sp.     TRUE          search_species(7360) #> # A tibble: 1 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  7360 Carolina Chicka… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          search_species(73) #> # A tibble: 28 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1  1730 Brant           Berna… Branta… Anse… Anati… Bran… bernic… TRUE          #>  2  2973 Blue Grouse (D… Tétra… Dendra… Gall… Phasi… Dend… obscur… TRUE          #>  3  2730 Killdeer        Pluvi… Charad… Char… Chara… Char… vocife… TRUE          #>  4   730 Aleutian Tern   Stern… Onycho… Char… Larid… Onyc… aleuti… TRUE          #>  5  3731 Whiskered Scre… Petit… Megasc… Stri… Strig… Mega… tricho… TRUE          #>  6  3732 Western Screec… Petit… Megasc… Stri… Strig… Mega… kennic… TRUE          #>  7  3730 Eastern Screec… Petit… Megasc… Stri… Strig… Mega… asio    TRUE          #>  8  4730 Eurasian Skyla… Aloue… Alauda… Pass… Alaud… Alau… arvens… TRUE          #>  9  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #> 10  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #> # ℹ 18 more rows search_species(\"^73\") # Use regex to match aou codes starting with 73 #> # A tibble: 17 × 9 #>      aou english         french spanish order family genus species unid_combined #>    <dbl> <chr>           <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #>  1   730 Aleutian Tern   Stern… Onycho… Char… Larid… Onyc… aleuti… TRUE          #>  2  7360 Carolina Chick… Mésan… Poecil… Pass… Parid… Poec… caroli… TRUE          #>  3  7350 Black-capped C… Mésan… Poecil… Pass… Parid… Poec… atrica… TRUE          #>  4  7380 Mountain Chick… Mésan… Poecil… Pass… Parid… Poec… gambeli TRUE          #>  5  7370 Mexican Chicka… Mésan… Poecil… Pass… Parid… Poec… sclate… TRUE          #>  6  7352 unid. Carolina… unid … Poecil… Pass… Parid… Poec… caroli… TRUE          #>  7  7353 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #>  8  7354 unid. Black-ca… unid … Poecil… Pass… Parid… Poec… atrica… TRUE          #>  9  7351 unid. western … unid … Poecil… Pass… Parid… Poec… sp.     TRUE          #> 10  7340 Bridled Titmou… Mésan… Baeolo… Pass… Parid… Baeo… wollwe… TRUE          #> 11  7330 Oak Titmouse    Mésan… Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 12  7331 Juniper Titmou… Mésan… Baeolo… Pass… Parid… Baeo… ridgwa… TRUE          #> 13  7332 unid. Oak Titm… unid … Baeolo… Pass… Parid… Baeo… inorna… TRUE          #> 14  7310 Tufted Titmouse Mésan… Baeolo… Pass… Parid… Baeo… bicolor TRUE          #> 15  7320 Black-crested … Mésan… Baeolo… Pass… Parid… Baeo… atricr… TRUE          #> 16  7315 unid. Tufted T… unid … Baeolo… Pass… Parid… Baeo… bicolo… TRUE          #> 17  7300 Pygmy Nuthatch  Sitte… Sitta … Pass… Sitti… Sitta pygmaea TRUE          search_species(\"blue grouse\") #> # A tibble: 1 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  2973 Blue Grouse (Du… Tétra… Dendra… Gall… Phasi… Dend… obscur… TRUE          search_species(\"sooty grouse\") #> # A tibble: 2 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  2971 Sooty Grouse     Tétra… Dendra… Gall… Phasi… Dend… fuligi… TRUE          #> 2  2973 Blue Grouse (Du… Tétra… Dendra… Gall… Phasi… Dend… obscur… TRUE           # To combine or not search_species(\"blue grouse\", combine_species_forms = FALSE) #> # A tibble: 0 × 9 #> # ℹ 9 variables: aou <dbl>, english <chr>, french <chr>, spanish <chr>, #> #   order <chr>, family <chr>, genus <chr>, species <chr>, unid_combined <lgl> search_species(\"sooty grouse\", combine_species_forms = FALSE) #> # A tibble: 2 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  2971 Sooty Grouse     Tétra… Dendra… Gall… Phasi… Dend… fuligi… FALSE         #> 2  2973 unid. Dusky Gro… unid … Dendra… Gall… Phasi… Dend… obscur… FALSE         search_species(\"northern flicker\") #> # A tibble: 4 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  4123 Northern Flicke… Pic f… Colapt… Pici… Picid… Cola… auratus TRUE          #> 2  4120 (Yellow-shafted… Pic f… Colapt… Pici… Picid… Cola… auratu… TRUE          #> 3  4130 (Red-shafted Fl… Pic f… Colapt… Pici… Picid… Cola… auratu… TRUE          #> 4  4125 hybrid Northern… hybri… Colapt… Pici… Picid… Cola… auratu… TRUE          search_species(\"northern flicker\", combine_species_forms = FALSE) #> # A tibble: 4 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  4123 (unid. Red/Yell… Pic f… Colapt… Pici… Picid… Cola… auratus FALSE         #> 2  4120 (Yellow-shafted… Pic f… Colapt… Pici… Picid… Cola… auratu… FALSE         #> 3  4130 (Red-shafted Fl… Pic f… Colapt… Pici… Picid… Cola… auratu… FALSE         #> 4  4125 hybrid Northern… hybri… Colapt… Pici… Picid… Cola… auratu… FALSE"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/species_forms.html","id":null,"dir":"Reference","previous_headings":"","what":"Species forms — species_forms","title":"Species forms — species_forms","text":"Species forms combined combine_species_forms TRUE stratify().","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/species_forms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species forms — species_forms","text":"","code":"species_forms"},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/species_forms.html","id":"species-forms","dir":"Reference","previous_headings":"","what":"species_forms","title":"Species forms — species_forms","text":"data frame 13 rows 5 columns aou_unid - AOU id number identify combined unidentified form ensligh_original - English name original 'unidentified' form english_combined - English name new 'combined' forms french_combined - French name new 'combined' forms aou_id - AOU id numbers forms combined","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/species_forms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species forms — species_forms","text":"","code":"species_forms #>    aou_unid                               english_original #> 1      2973              unid. Dusky Grouse / Sooty Grouse #> 2      5677                   (unid. race) Dark-eyed Junco #> 3      4123    (unid. Red/Yellow Shafted) Northern Flicker #> 4      5077      unid. Bullock's Oriole / Baltimore Oriole #> 5      3370                                Red-tailed Hawk #> 6      4022                                unid. sapsucker #> 7      1690                                     Snow Goose #> 8      6295       unid. Cassin's Vireo / Blue-headed Vireo #> 9      4665     unid. Alder Flycatcher / Willow Flycatcher #> 10     4642   unid. Cordilleran / Pacific-slope Flycatcher #> 11       12            unid. Western Grebe / Clark's Grebe #> 12     6556 (unid. Myrtle/Audubon's) Yellow-rumped Warbler #> 13     5275           unid. Common Redpoll / Hoary Redpoll #>                                                   english_combined #> 1                                        Blue Grouse (Dusky/Sooty) #> 2                                      Dark-eyed Junco (all forms) #> 3                                     Northern Flicker (all forms) #> 4                            Northern Oriole (Bullock's/Baltimore) #> 5                                      Red-tailed Hawk (all forms) #> 6  Sapsuckers (Yellow-bellied/Red-naped/Red-breasted/Williamson's) #> 7                                           Snow Goose (all forms) #> 8                            Solitary Vireo (Blue-headed/Cassin's) #> 9                               Traill's Flycatcher (Alder/Willow) #> 10                  Western Flycatcher (Cordilleran/Pacific-slope) #> 11                                 Western Grebe (Clark's/Western) #> 12                               Yellow-rumped Warbler (all forms) #> 13                                          Redpoll (Common/Hoary) #>                                                french_combined #> 1                            Tétras sombre (sombre/fuligineux) #> 2                            Junco ardoisé (toutes les formes) #> 3                           Pic flamboyant (toutes les formes) #> 4                     Oriole du Nord (de Bullock/de Baltimore) #> 5                      Buse à queue rousse (toutes les formes) #> 6  Pics buveur de sève (maculé/à nuque rouge/à poitrine rouge) #> 7                           Oie des neiges (toutes les formes) #> 8                  Viréo à tête bleue (à tête bleue/de Cassin) #> 9               Moucherolle de Traill (des aulnes/ des saules) #> 10                     Moucherolle côtier (des ravins/ côtier) #> 11                      Grèbe élégant (à face blanche/élégant) #> 12               Paruline à croupion jaune (toutes les formes) #> 13                                 Sizerin (Flammé/Blanchâtre) #>                          aou_id #> 1                    2970, 2971 #> 2  5671, 5670, 5680, 5660, 5690 #> 3              4125, 4120, 4130 #> 4              5080, 5070, 5078 #> 5                          3380 #> 6        4020, 4021, 4031, 4032 #> 7                          1691 #> 8              6292, 6291, 6290 #> 9                    4661, 4660 #> 10                   4641, 4640 #> 11                       10, 11 #> 12                   6550, 6560 #> 13                   5270, 5280"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify and filter Breeding Bird Survey data — stratify","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"Assign count data strata filter species interest. Routes assigned strata based geographic location stratification specified user. Species filtered matching English, French Scientific names BBS species data (see search_species() flexible search identify correct species names).","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"","code":"stratify(   by,   species,   strata_custom = NULL,   combine_species_forms = TRUE,   release = 2022,   sample_data = FALSE,   return_omitted = FALSE,   quiet = FALSE )"},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"Character. Stratification type. Either established type, one \"prov_state\", \"bcr\", \"latlong\", \"bbs_cws\", \"bbs_usgs\", custom name (see strata_custom details). species Character. Bird species interest. Can specified English, French, Scientific names, AOU code. Use search_species() loose matching find exact name/code needed. strata_custom (sf) Data Frame. Data frame modified existing stratification, sf spatial data frame polygons defining custom stratifications. See Details. combine_species_forms Logical. Whether combine ambiguous species forms. Default TRUE. See Details. release Numeric. yearly release use, 2022 (including data 2021 field season) 2020 (including data 2019). Default 2022. sample_data Logical. Use sample data (just Pacific Wrens). Default FALSE. return_omitted Logical. Whether return data frame route-years omitted stratification overlap stratum. checking troubleshooting. Default FALSE. quiet Logical. Suppress progress messages? Default FALSE.","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"List (meta) data. meta_data - meta data defining analysis meta_strata - data frame listing strata names area strata relevant data (.e. may removed due lack count data). Contains least strata_name (label stratum), area_sq_km (area stratum). birds_strata - data frame stratified count-level data filtered species routes_strata - data frame stratified route-level data filtered species","code":""},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"define custom subset existing stratification, specify stratification (e.g., \"bbs_cws\") supply subset bbs_strata[[\"bbc_cws\"]] strata_custom (see examples). define completely new custom stratification, specify name like use (e.g., \"east_west_divide\") supply spatial data frame polygons identifying different strata strata_custom. Note data must column called strata_name names strata contained (see examples). combine_species_forms TRUE (default), species multiple forms (e.g., \"unid. Dusky Grouse / Sooty Grouse\") included overall species groupings (.e., \"unid.\" combined \"Dusky Grouse\" \"Sooty Grouse\" \"Blue Grouse (Dusky/Sooty)\"). user wishes keep forms separate, combine_species_forms can set FALSE. See data frame species_forms, species set combined species. See vignette(\"stratification\", package = \"bbsBayes2\") article custom stratification details.","code":""},{"path":[]},{"path":"https://bbsbayes.github.io/bbsBayes2/reference/stratify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify and filter Breeding Bird Survey data — stratify","text":"","code":"# Sample Data - USGS BBS strata s <- stratify(by = \"bbs_usgs\", sample_data = TRUE) #> Using 'bbs_usgs' (standard) stratification #> Using sample BBS data... #> Using species Pacific Wren (sample data) #> Stratifying data... #>   Renaming routes...  # Full data - species and stratification # Use `search_species()` to get correct species name  # Stratify by CWS BBS strata s <- stratify(by = \"bbs_cws\", species = \"Common Loon\") #> Using 'bbs_cws' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes...  # Use use English, French, Scientific, or AOU codes for species names s <- stratify(by = \"bbs_cws\", species = \"Plongeon huard\") #> Using 'bbs_cws' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... s <- stratify(by = \"bbs_cws\", species = 70) #> Using 'bbs_cws' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... s <- stratify(by = \"bbs_cws\", species = \"Gavia immer\") #> Using 'bbs_cws' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes...  # Stratify by Bird Conservation Regions s <- stratify(by = \"bcr\", species = \"Great Horned Owl\") #> Using 'bcr' (standard) stratification #> Loading BBS data... #> Filtering to species Great Horned Owl (3750) #> Stratifying data... #>   Renaming routes...  # Stratify by CWS BBS strata s <- stratify(by = \"bbs_cws\", species = \"Canada Jay\") #> Using 'bbs_cws' (standard) stratification #> Loading BBS data... #> Filtering to species Canada Jay (4840) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes...  # Stratify by State/Province/Territory only s <- stratify(by = \"prov_state\", species = \"Common Loon\") #> Using 'prov_state' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Renaming routes... s <- stratify(by = \"prov_state\", species = \"Plongeon huard\") #> Using 'prov_state' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Renaming routes... s <- stratify(by = \"prov_state\", species = 70) #> Using 'prov_state' (standard) stratification #> Loading BBS data... #> Filtering to species Common Loon (70) #> Stratifying data... #>   Renaming routes...   # Stratify by blocks of 1 degree of latitude X 1 degree of longitude s <- stratify(by = \"latlong\", species = \"Snowy Owl\") #> Using 'latlong' (standard) stratification #> Loading BBS data... #> Filtering to species Snowy Owl (3760) #> Stratifying data... #>   Renaming routes... #>   Omitting 80/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify)  # Check routes omitted by stratification s <- stratify(by = \"latlong\", species = \"Snowy Owl\", return_omitted = TRUE) #> Using 'latlong' (standard) stratification #> Loading BBS data... #> Filtering to species Snowy Owl (3760) #> Stratifying data... #>   Renaming routes... #>   Omitting 80/119,567 route-years that do not match a stratum. #>     Returning omitted routes. s[[\"routes_omitted\"]] #> # A tibble: 80 × 11 #>     year strata_name country state     route route_name latitude longitude   bcr #>    <dbl> <chr>       <chr>   <chr>     <chr> <chr>         <dbl>     <dbl> <dbl> #>  1  1988 NA          US      CALIFORN… 14-1… SANTA CRU…     34.0    -120.     32 #>  2  1987 NA          US      FLORIDA   25-83 KEY WEST       24.7     -81.2    31 #>  3  1999 NA          US      FLORIDA   25-1… SUGARLOAF…     24.7     -81.2    31 #>  4  2002 NA          US      FLORIDA   25-1… SUGARLOAF…     24.7     -81.2    31 #>  5  2003 NA          US      FLORIDA   25-1… SUGARLOAF…     24.7     -81.2    31 #>  6  2004 NA          US      FLORIDA   25-1… SUGARLOAF…     24.7     -81.2    31 #>  7  2005 NA          US      FLORIDA   25-2… SUGARLOAF…     24.6     -81.6    31 #>  8  2006 NA          US      FLORIDA   25-2… SUGARLOAF…     24.6     -81.6    31 #>  9  2007 NA          US      FLORIDA   25-2… SUGARLOAF…     24.6     -81.6    31 #> 10  2008 NA          US      FLORIDA   25-2… SUGARLOAF…     24.6     -81.6    31 #> # ℹ 70 more rows #> # ℹ 2 more variables: obs_n <dbl>, total_spp <dbl>  # Use combined or non-combined species forms  search_species(\"Sooty grouse\") #> # A tibble: 2 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  2971 Sooty Grouse     Tétra… Dendra… Gall… Phasi… Dend… fuligi… TRUE          #> 2  2973 Blue Grouse (Du… Tétra… Dendra… Gall… Phasi… Dend… obscur… TRUE          s <- stratify(by = \"bbs_usgs\", species = \"Blue Grouse (Dusky/Sooty)\") #> Using 'bbs_usgs' (standard) stratification #> Loading BBS data... #> Filtering to species Blue Grouse (Dusky/Sooty) (2973) #> Stratifying data... #>   Renaming routes... nrow(s$birds_strata) # Contains all Dusky, Sooty and unidentified #> [1] 1501  search_species(\"Sooty grouse\", combine_species_forms = FALSE) #> # A tibble: 2 × 9 #>     aou english          french spanish order family genus species unid_combined #>   <dbl> <chr>            <chr>  <chr>   <chr> <chr>  <chr> <chr>   <lgl>         #> 1  2971 Sooty Grouse     Tétra… Dendra… Gall… Phasi… Dend… fuligi… FALSE         #> 2  2973 unid. Dusky Gro… unid … Dendra… Gall… Phasi… Dend… obscur… FALSE         s <- stratify(by = \"bbs_usgs\", species = \"unid. Dusky Grouse / Sooty Grouse\",               combine_species_forms = FALSE) #> Using 'bbs_usgs' (standard) stratification #> Loading BBS data... #> Filtering to species unid. Dusky Grouse / Sooty Grouse (2973) #> Stratifying data... #>   Renaming routes... nrow(s$birds_strata) # Contains *only* unidentified #> [1] 90   # Stratify by a subset of an existing stratification library(dplyr) my_cws <- filter(bbs_strata[[\"bbs_cws\"]], country_code == \"CA\") s <- stratify(by = \"bbs_cws\", strata_custom = my_cws, species = \"Snowy Owl\") #> Using 'bbs_cws' (subset) stratification #> Loading BBS data... #> Filtering to species Snowy Owl (3760) #> Stratifying data... #>   Combining BCR 7 and NS and PEI... #>   Renaming routes... #>   Omitting 101,474/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify)  my_bcr <- filter(bbs_strata[[\"bcr\"]], strata_name == \"BCR8\") s <- stratify(by = \"bcr\", strata_custom = my_bcr,               species = \"Yellow-rumped Warbler (all forms)\") #> Using 'bcr' (subset) stratification #> Loading BBS data... #> Filtering to species Yellow-rumped Warbler (all forms) (6556) #> Stratifying data... #>   Renaming routes... #>   Omitting 118,210/119,567 route-years that do not match a stratum. #>     To see omitted routes use `return_omitted = TRUE` (see ?stratify)  # Stratify by Custom stratification, using sf map object # e.g. with WBPHS stratum boundaries 2019 # available: https://ecos.fws.gov/ServCat/Reference/Profile/142628  if (FALSE) { map <- sf::read_sf(\"../WBPHS_Stratum_Boundaries_2019\") %>%   rename(strata_name = STRAT) # stratify expects this column  s <- stratify(by = \"WBPHS_2019\", strata_map = map) }"},{"path":"https://bbsbayes.github.io/bbsBayes2/news/index.html","id":"bbsbayes2-100","dir":"Changelog","previous_headings":"","what":"bbsBayes2 1.0.0","title":"bbsBayes2 1.0.0","text":"First release bbsBayes2, successor bbsBayes!","code":""}]
